{"version":3,"sources":["icons/partly_cloudy.svg","icons/partly_cloudy_windy.svg","icons/rain.svg","icons/sun_thunderstorm.svg","icons/cloudy_windy.svg","icons/sun.svg","icons/mostly_cloudy.svg","icons/cloudy.svg","icons/snow.svg","icons/sunny_rain.svg","icons/thunderstorm.svg","icons/blizzard.svg","icons/windy.svg","util/index.tsx","icons.tsx","ForecastCard.tsx","ForecastModal.tsx","Forecast.tsx","util/getCardinalDirection.tsx","CurrentConditions.tsx","WeatherLine.tsx","HourlyGraphs.tsx","Radar.tsx","theme.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","CtoF","d","Math","round","metersPerSecondToMph","m","parseIcon","iconUrl","replace","split","slice","map","icon","percent","parseInt","sort","a","b","Sun","PartlyCloudy","MostlyCloudy","Cloudy","Windy","PartlyCloudyWindy","CloudyWindy","Snow","Rain","SunnyRain","Thunderstorm","SunThunderstorm","Blizzard","useStyles","makeStyles","cardRoot","margin","width","height","display","cardRootMobile","padding","cardContentMobile","paddingBottom","ForecastCard","period","restProps","isMobile","useMediaQuery","classes","dayFormat","Card","root","CardContent","Typography","variant","moment","startTime","format","style","alignItems","justifyContent","src","alt","textAlign","marginLeft","paddingTop","color","maxTemp","minTemp","fontWeight","windSpeed","windDirection","shortForecast","Transition","React","forwardRef","props","ref","Slide","direction","ForecastModal","day","open","setOpen","Dialog","TransitionComponent","keepMounted","onClose","DialogTitle","DialogContent","marginBottom","marginRight","temperature","detailedForecast","night","marginTop","DialogActions","Button","onClick","expansionRoot","expansionContent","tableCell","border","Forecast","useState","forecast","setForecast","forecastModalOpen","setForecastModalOpen","activeForcast","setActiveForcast","fetch","then","res","json","response","parsed","properties","periods","idx","temps","console","log","parsedIcon","balmyIcon","icons","min","max","precip","days","filter","name","length","undefined","isDaytime","startDayOfTheWeek","p","endTime","minMaxTemps","parsedIcons","startDay","endDayOfTheWeek","endDay","useEffect","fetchForecast","overflowX","Table","TableBody","i","TableRow","key","TableCell","getCardinalDirection","heading","CurrentConditions","currentConditions","setCurrentConditions","windChill","value","heatIndex","fetchCurrentConditions","feelsLike","transform","windGust","CurrentDetails","size","className","relativeHumidity","dewpoint","visibility","barometricPressure","WeatherLine","axisBottom","axisLeft","top","right","bottom","left","xScale","type","precision","xFormat","yFormat","yScale","stacked","reverse","curve","axisTop","axisRight","tickValues","legendOffset","orient","tickSize","tickPadding","tickRotation","legendPosition","colors","scheme","lineWidth","enablePoints","enableArea","areaOpacity","useMesh","enableSlices","sliceTooltip","paddingLeft","paddingRight","backgroundColor","points","data","yFormatted","x","HourlyGraphs","hourlyForecast","setHourlyForecast","hourly","values","validTime","toDate","y","skyCover","probabilityOfPrecipitation","fetchHourlyForecast","times","minDay","startOf","add","range","diff","push","clone","userSelect","areaBaselineValue","legend","Radar","setMap","valueOf","time","setTime","timeIntervals","useMemo","subtract","label","getTimeIntervals","loopState","setLoopState","loop","setLoop","radarPromises","interval","getRadarUrl","Promise","all","pauseLoop","clearInterval","getSource","updateImage","url","forceTime","bounds","getBounds","toArray","southWest","northEast","params","dpi","transparent","bbox","join","bboxSR","imageSR","window","innerWidth","innerHeight","f","queryString","URLSearchParams","toString","innerMap","mapboxgl","Map","container","maxZoom","minZoom","zoom","center","hash","on","addSource","getNorthWest","getNorthEast","getSouthEast","getSouthWest","addLayer","setPaintProperty","radarSource","radarUrl","coordinates","setTimeout","currentInterval","forEach","setInterval","id","position","borderRadius","IconButton","getRadarLoop","CircularProgress","Slider","marks","defaultValue","valueLabelDisplay","step","onChangeCommitted","event","accessToken","theme","createMuiTheme","responsiveFontSizes","App","fabStyle","ThemeProvider","path","to","Fab","aria-label","maxWidth","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.54b6571b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/partly_cloudy.4ae3e84d.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly_cloudy_windy.bb410bac.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.633504b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun_thunderstorm.98a13764.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy_windy.475f49b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.c536ba25.svg\";","module.exports = __webpack_public_path__ + \"static/media/mostly_cloudy.9bed9624.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.e3f4d975.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.7f879cdd.svg\";","module.exports = __webpack_public_path__ + \"static/media/sunny_rain.bdf06b84.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunderstorm.48b7e66b.svg\";","module.exports = __webpack_public_path__ + \"static/media/blizzard.4181412c.svg\";","module.exports = __webpack_public_path__ + \"static/media/windy.d1a8592d.svg\";","\nexport function CtoF(d: number) {\n    return Math.round((d * 9/5) + 32);\n}\n\nexport function metersPerSecondToMph(m: number) {\n    return Math.round(m * 2.23694)\n}\n\nexport function metersToMiles(m: number) {\n    return Math.round(m * 0.0006213712);\n}\n\nexport function parseIcon(iconUrl: string) {\n    return iconUrl\n        .replace('https://api.weather.gov/icons/', '')\n        .split('?')[0]\n        .split('/')\n        .slice(2)\n        .map(d => d.split(','))\n        .map(d => { return {icon: d[0], percent: parseInt(d[1]) }})\n        .sort((a, b) => b.percent - a.percent);\n}\n","import Sun from './icons/sun.svg';\nimport PartlyCloudy from './icons/partly_cloudy.svg';\nimport MostlyCloudy from './icons/mostly_cloudy.svg';\nimport Cloudy from './icons/cloudy.svg';\nimport PartlyCloudyWindy from './icons/partly_cloudy_windy.svg';\nimport Snow from './icons/snow.svg';\nimport Rain from './icons/rain.svg';\nimport SunnyRain from './icons/sunny_rain.svg';\nimport Thunderstorm from './icons/thunderstorm.svg';\nimport SunThunderstorm from './icons/sun_thunderstorm.svg';\nimport Blizzard from './icons/blizzard.svg';\nimport Windy from './icons/windy.svg';\nimport CloudyWindy from './icons/cloudy_windy.svg';\n\n// https://thenounproject.com/anusha.narvekar/collection/weather/\nexport default {\n    \"skc\": {\n        \"description\": \"Fair/clear\",\n        \"icon\": Sun,\n    },\n    \"few\": {\n        \"description\": \"A few clouds\",\n        \"icon\": PartlyCloudy,\n    },\n    \"sct\": {\n        \"description\": \"Partly cloudy\",\n        \"icon\": PartlyCloudy,\n    },\n    \"bkn\": {\n        \"description\": \"Mostly cloudy\",\n        \"icon\": MostlyCloudy,\n    },\n    \"ovc\": {\n        \"description\": \"Overcast\",\n        \"icon\": Cloudy,\n    },\n    \"wind_skc\": {\n        \"description\": \"Fair/clear and windy\",\n        \"icon\": Windy,\n    },\n    \"wind_few\": {\n        \"description\": \"A few clouds and windy\",\n        \"icon\": PartlyCloudyWindy,\n    },\n    \"wind_sct\": {\n        \"description\": \"Partly cloudy and windy\",\n        \"icon\": PartlyCloudyWindy,\n    },\n    \"wind_bkn\": {\n        \"description\": \"Mostly cloudy and windy\",\n        \"icon\": CloudyWindy,\n    },\n    \"wind_ovc\": {\n        \"description\": \"Overcast and windy\",\n        \"icon\": CloudyWindy,\n    },\n    \"snow\": {\n        \"description\": \"Snow\",\n        \"icon\": Snow,\n    },\n    \"rain_snow\": {\n        \"description\": \"Rain/snow\"\n    },\n    \"rain_sleet\": {\n        \"description\": \"Rain/sleet\"\n    },\n    \"snow_sleet\": {\n        \"description\": \"Rain/sleet\"\n    },\n    \"fzra\": {\n        \"description\": \"Freezing rain\"\n    },\n    \"rain_fzra\": {\n        \"description\": \"Rain/freezing rain\"\n    },\n    \"snow_fzra\": {\n        \"description\": \"Freezing rain/snow\"\n    },\n    \"sleet\": {\n        \"description\": \"Sleet\"\n    },\n    \"rain\": {\n        \"description\": \"Rain\",\n        \"icon\": Rain,\n    },\n    \"rain_showers\": {\n        \"description\": \"Rain showers (high cloud cover)\",\n        \"icon\": Rain,\n    },\n    \"rain_showers_hi\": {\n        \"description\": \"Rain showers (low cloud cover)\",\n        \"icon\": SunnyRain,\n    },\n    \"tsra\": {\n        \"description\": \"Thunderstorm (high cloud cover)\",\n        \"icon\": Thunderstorm,\n    },\n    \"tsra_sct\": {\n        \"description\": \"Thunderstorm (medium cloud cover)\",\n        \"icon\": SunThunderstorm,\n    },\n    \"tsra_hi\": {\n        \"description\": \"Thunderstorm (low cloud cover)\",\n        \"icon\": SunThunderstorm,\n    },\n    \"tornado\": {\n        \"description\": \"Tornado\"\n    },\n    \"hurricane\": {\n        \"description\": \"Hurricane conditions\"\n    },\n    \"tropical_storm\": {\n        \"description\": \"Tropical storm conditions\"\n    },\n    \"dust\": {\n        \"description\": \"Dust\"\n    },\n    \"smoke\": {\n        \"description\": \"Smoke\"\n    },\n    \"haze\": {\n        \"description\": \"Haze\"\n    },\n    \"hot\": {\n        \"description\": \"Hot\"\n    },\n    \"cold\": {\n        \"description\": \"Cold\"\n    },\n    \"blizzard\": {\n        \"description\": \"Blizzard\",\n        \"icon\": Blizzard,\n    },\n    \"fog\": {\n        \"description\": \"Fog/mist\"\n    }\n}","import React from 'react';\nimport Card, {CardProps} from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport {Typography} from '@material-ui/core';\nimport {BalmyForecast} from './types/ForecastPeriod';\nimport moment from 'moment';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {makeStyles} from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    cardRoot: {\n        margin: '8px',\n        width: '230px',\n        height: '175px',\n        display: 'inline-block'\n    },\n    cardRootMobile: {\n        margin: '4px',\n        padding: '4px',\n        width: '110px',\n        height: '100px',\n        display: 'inline-block'\n    },\n    cardContentMobile: {\n        padding: '4px',\n        '&:last-child': {\n            paddingBottom: 0,\n        }\n    }\n})\nexport default function ForecastCard({period, ...restProps}: CardProps & {period: BalmyForecast}) {\n    const isMobile = useMediaQuery('(max-width: 500px)');\n    const classes = useStyles();\n\n    const dayFormat = isMobile ? 'ddd D' : 'dddd MMM D'\n\n    return <Card classes={{\n        root: isMobile ? classes.cardRootMobile : classes.cardRoot,\n    }} {...restProps}>\n        <CardContent classes={{root: isMobile ? classes.cardContentMobile : ''}}>\n            <Typography variant='subtitle1'>\n               {moment(period.startTime).format(dayFormat)}\n            </Typography>\n\n            <div style={{\n                display: isMobile ? 'block': 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n            }}>\n\n                <div style={{display: isMobile ? 'block' : 'inline-block'}}>\n                    <img src={period.icon} style={{height: isMobile ? '30px' : '45px'}} alt=''/>\n                </div>\n\n                <div style={{\n                    display: isMobile ? 'block' : 'inline-block',\n                    textAlign: 'center',\n                    marginLeft: isMobile ? 0 : '16px',\n                    paddingTop: isMobile ? '4px': '8px',\n                    paddingBottom: isMobile ? 0 : '8px'\n                }}>\n                    <Typography variant='h6'>\n                        <span style={{color: '#d5202a'}}>{period.maxTemp}</span>°{' | '}\n                        <span style={{color: '#0053ae'}}>{period.minTemp}</span>°<span style={{fontWeight: 400}}>F</span>\n                    </Typography>\n\n                    {!isMobile && <Typography variant='body2'>\n                        {period.windSpeed} {period.windDirection}\n                    </Typography>}\n                </div>\n            </div>\n\n            {!isMobile && <Typography variant='body2'>{period.shortForecast}</Typography>}\n        </CardContent>\n    </Card>\n}","import React from 'react';\nimport {Typography} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport {BalmyForecast} from './types/ForecastPeriod';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { TransitionProps } from '@material-ui/core/transitions';\nimport moment from 'moment';\n\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\n    ref: React.Ref<unknown>,\n) {\n    return <Slide direction='up' ref={ref} {...props} />;\n});\n\ninterface ForecastModalProps {\n    day: BalmyForecast | undefined;\n    open: boolean;\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\nexport default function ForecastModal({day, open, setOpen}: ForecastModalProps) {\n    if (!day) return null;\n    return (\n    <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={() => setOpen(false)}\n    >\n        <DialogTitle>{moment(day.startTime).format('dddd MMM Do')}</DialogTitle>\n        <DialogContent>\n            <div style={{paddingBottom: '24px'}}>\n                <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', marginBottom: '16px'}}>\n                    <img src={day.icon} style={{height: '75px', marginRight: '16px'}} alt=''/>\n                    <Typography variant='h6'>\n                        <span style={{color: '#d5202a'}}>{day.temperature}</span>°F\n                    </Typography>\n                </div>\n                <Typography variant='body1'>\n                    {day.detailedForecast}\n                </Typography>\n            </div>\n\n            {day.night && <div>\n                <Typography variant='h6'>Overight</Typography>\n                <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '16px', marginBottom: '16px'}}>\n                    <img src={day.night.icon} style={{height: '75px', marginRight: '16px'}} alt=''/>\n                    <Typography variant='h6'>\n                        <span style={{color: '#d5202a'}}>{day.night.temperature}</span>°F\n                    </Typography>\n                </div>\n                <Typography variant='body1'>\n                    {day.night.detailedForecast}\n                </Typography>\n            </div>}\n\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={() => setOpen(false)} color=\"primary\">\n                Close\n            </Button>\n        </DialogActions>\n    </Dialog>\n    );\n}","import React, {useState, useEffect} from 'react';\nimport moment from 'moment';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {Typography} from '@material-ui/core';\nimport {ForecastPeriod, BalmyForecast} from './types/ForecastPeriod';\nimport {parseIcon} from './util';\nimport icons from './icons';\nimport ForecastCard from './ForecastCard';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {makeStyles} from '@material-ui/styles'\nimport ForecastModal from './ForecastModal';\n\nconst useStyles = makeStyles({\n  expansionRoot: {\n    padding: 0,\n  },\n  expansionContent: {\n    display: 'table',\n  },\n  tableCell: {\n    border: 0,\n  }\n})\n\nexport default function Forecast() {\n    const [forecast, setForecast] = useState<BalmyForecast[]>([]);\n    const isMobile = useMediaQuery('(max-width: 500px)');\n    const [forecastModalOpen, setForecastModalOpen] = useState(false);\n    const [activeForcast, setActiveForcast] = useState<BalmyForecast | undefined>();\n\n    const classes = useStyles();\n\n    async function fetchForecast() {\n        const response = await fetch('https://api.weather.gov/gridpoints/MPX/109,70/forecast')\n          .then(res => res.json());\n\n        const parsed = response.properties.periods\n          .map((period: ForecastPeriod, idx: number) => {\n            const temps = [\n              period.temperature,\n              ...(response.properties.periods[idx] ? [response.properties.periods[idx].temperature] : []),\n              ...(response.properties.periods[idx + 1] ? [response.properties.periods[idx + 1].temperature] : [])\n            ]\n            console.log(temps)\n            const parsedIcon = parseIcon(period.icon)[0];\n            const balmyIcon = (icons as any)[parsedIcon.icon];\n\n            return {\n              ...period,\n              minTemp: Math.min(...temps),\n              maxTemp: Math.max(...temps),\n              precip: parsedIcon.percent,\n              icon: balmyIcon.icon || period.icon,\n            }\n          });\n\n         const days = parsed.map((day: ForecastPeriod) => {\n            const night = parsed.filter(\n              (period: ForecastPeriod) => {\n                if (period.name === day.name + ' Night') return period;\n              }\n            );\n\n            return {\n              ...day,\n              night: night.length ? night[0] : undefined,\n\n            }\n          }).filter((period: ForecastPeriod) => period.isDaytime);\n\n        const periods: BalmyForecast[] = response.properties.periods.map((period: ForecastPeriod) => {\n          // Get min/max temp for that day\n          const startDayOfTheWeek = moment(period.startTime).format('ddd');\n\n          let temps = []\n          if (period.isDaytime) {\n            temps = response.properties.periods.filter((p:any) => {\n              if (\n                moment(p.startTime).format('ddd') === startDayOfTheWeek ||\n                moment(p.endTime).format('ddd') === startDayOfTheWeek\n              ) {\n                return p\n              }\n              return false\n            }).map((p: any) => p.temperature);\n          }\n          const minMaxTemps = !temps ? {} : {\n            minTemp: Math.min(...temps),\n            maxTemp: Math.max(...temps),\n          }\n\n          const parsedIcons = parseIcon(period.icon);\n\n          return {\n            ...period,\n            startDayOfTheWeek,\n            startDay: moment(period.startTime).format('M/D'),\n            endDayOfTheWeek: moment(period.endTime).format('ddd'),\n            endDay: moment(period.endTime).format('M/D'),\n            ...(parsedIcons.length && parsedIcons[0].percent ? {precip: parsedIcons[0].percent} : {}),\n            ...minMaxTemps,\n            ...(parsedIcons ? {icon: (icons as any)[parsedIcons[0].icon]?.icon || period.icon} : {icon: period.icon} ),\n\n          }\n        });\n\n        console.log(days)\n\n        setForecast(days);\n      }\n\n    useEffect(() => {\n        fetchForecast();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (!forecast) return null;\n\n    return <>\n        <div style={{overflowX: 'scroll'}}>\n            <div style={{\n              width: isMobile ? '900px' : '1750px',\n              display: 'flex',\n              paddingTop: '16px',\n              paddingBottom: '16px'\n            }}>\n                {forecast.map(day => {\n                  return <ForecastCard\n                    period={day}\n                    onClick={() => {\n                      console.log(day)\n                      setForecastModalOpen(true);\n                      setActiveForcast(day);\n                    }}/>\n                })}\n            </div>\n            {/* <div>\n                {forecast.map(day => {\n                return <div style={{display: 'inline-block', padding: '8px', fontSize: '12px'}} key={day.number}>\n                    <Typography variant='h5'>{day.startDayOfTheWeek} {day.startDay}</Typography>\n                    {day.minTemp &&\n                    <Typography variant='body1'>\n                        <span style={{color: '#d5202a'}}>{day.maxTemp}</span>°{' | '}\n                        <span style={{color: '#0053ae'}}>{day.minTemp}</span>°<span style={{fontWeight: 400}}>F</span>\n                    </Typography>\n                    }\n                    <img src={day.icon} style={{height: '80px'}} alt=''/>\n                    {day.precip && <p>Precip: {day.precip}%</p>}\n                </div>\n                })}\n            </div> */}\n        </div>\n        {!isMobile && <Table>\n            <TableBody>\n            {forecast.map((day, i) => {\n            return <TableRow key={i}>\n                 <TableCell style={{padding: isMobile ? '10px' : '16px'}}>\n                      <Typography variant='body2'>{moment(day.startTime).format('ddd')} {moment(day.startTime).format('M/D')}</Typography>\n                  </TableCell>\n                  <TableCell style={{padding: isMobile ? '10px' : '16px'}}>\n                      <Typography variant='body2'>\n                          <span style={{color: '#d5202a'}}>{day.maxTemp}</span>°{' | '}\n                          <span style={{color: '#0053ae'}}>{day.minTemp}</span>°\n                          <span style={{fontWeight: 400}}>F</span>\n                      </Typography>\n                  </TableCell>\n                  <TableCell style={{padding: isMobile ? '10px' : '16px'}}>\n                      <Typography variant='body2'>{day.windSpeed} {day.windDirection}</Typography>\n                  </TableCell>\n                  {!isMobile && <TableCell style={{width: '50%', textAlign: 'left', padding: isMobile ? '10px' : '16px'}}>\n                      <Typography variant='body2'>{day.detailedForecast}</Typography>\n                  </TableCell>}\n              </TableRow>\n            })}\n            </TableBody>\n        </Table>}\n        <ForecastModal day={activeForcast} open={forecastModalOpen} setOpen={setForecastModalOpen} />\n    </>\n}","  export default function getCardinalDirection(heading: number) {\n    // Principle winds + half-winds defintions via https://en.wikipedia.org/wiki/Points_of_the_compass\n    // 22.49deg between each step\n    switch(true) {\n      case (heading >= 348.76 || heading <= 11.25):\n        return 'N'\n      case heading >= 11.26 && heading <= 33.75:\n        return 'NNE'\n      case heading >= 33.76 && heading <= 56.25:\n        return 'NE'\n      case heading >= 56.26 && heading <= 78.75:\n        return 'ENE'\n      case heading >= 78.76 && heading <= 101.25:\n        return 'E'\n      case heading >= 101.26 && heading <= 123.75:\n        return 'ESE'\n      case heading >= 123.76 && heading <= 146.25:\n        return 'SE'\n      case heading >= 146.26 && heading <= 168.75:\n        return 'SSE'\n      case heading >= 168.76 && heading <= 191.25:\n        return 'S'\n      case heading >= 191.26 && heading <= 213.75:\n        return 'SSW'\n      case heading >= 213.76 && heading <= 236.25:\n        return 'SW'\n      case heading >= 236.26 && heading <= 258.75:\n        return 'WSW'\n      case heading >= 258.76 && heading <= 281.25:\n        return 'W'\n      case heading >= 281.26 && heading <= 303.75:\n        return 'WNW'\n      case heading >= 303.76 && heading <= 326.25:\n        return 'NW'\n      case heading >= 326.26 && heading <= 348.75:\n        return 'NNW'\n      default:\n        return 'N/A'\n    }\n  }","import React, {useState, useEffect} from 'react';\nimport {Typography} from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport {CtoF, metersToMiles, metersPerSecondToMph, parseIcon} from './util';\nimport getCardinalDirection from './util/getCardinalDirection';\nimport icons from './icons';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nexport default function CurrentConditions() {\n    const [currentConditions, setCurrentConditions] = useState<any>(undefined);\n    const isMobile = useMediaQuery('(max-width: 500px)');\n\n    async function fetchCurrentConditions() {\n        const response = await fetch('https://api.weather.gov/stations/KMSP/observations/latest')\n          .then(res => res.json())\n\n        const parsedIcons = parseIcon(response.properties.icon);\n        if (parsedIcons) {\n          response.properties.icon = (icons as any)[parsedIcons[0]?.icon].icon;\n        }\n\n        response.properties['feelsLike'] = currentConditions?.properties.windChill.value || currentConditions?.properties.heatIndex.value;\n        setCurrentConditions(response.properties);\n      }\n\n    useEffect(() => {\n        fetchCurrentConditions();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (!currentConditions) return null;\n\n    return <div>\n    <div style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-evenly',\n        padding: isMobile ? 0 : '40px',\n    }}>\n        <div>\n            <img\n                src={currentConditions.icon}\n                style={{width: isMobile ? '130px': '175px'}}\n                alt=''\n            />\n        </div>\n        <div>\n            <Typography variant={isMobile ? 'h2': 'h1'}>\n                {CtoF(currentConditions.temperature.value)}°F\n            </Typography>\n            {currentConditions.feelsLike && <Typography variant='h5'>\n                Feels like {CtoF(currentConditions.feelsLike)}°F\n            </Typography>}\n            {!isMobile && <div>\n                <Typography variant='h3' style={{display: 'inline-block'}}>\n                    <NavigationIcon style={{\n                        transform: `rotate(${currentConditions.windDirection.value - 180}deg)`,\n                        marginRight: '8px',\n                    }}/>\n                    {metersPerSecondToMph(currentConditions.windSpeed.value)}\n                    {currentConditions.windGust.value ?\n                    ' | ' + metersPerSecondToMph(currentConditions.windGust.value) : ''}\n                </Typography>\n                <Typography variant='h5' style={{display: 'inline-block', marginLeft: '8px'}}>mph</Typography>\n                <Typography variant='h5'  style={{display: 'inline-block', marginLeft: '8px'}}>\n                    {getCardinalDirection(currentConditions.windDirection.value)}\n                </Typography>\n            </div>}\n        </div>\n\n        {!isMobile && <CurrentDetails currentConditions={currentConditions} /> }\n    </div>\n        {isMobile && <CurrentDetails currentConditions={currentConditions} /> }\n    </div>;\n}\n\nfunction CurrentDetails({currentConditions}: {currentConditions: any}) {\n    if (!currentConditions) return null\n    return <div>\n        <Table size=\"small\" >\n            <TableBody>\n                <TableRow className='mobile-wind'>\n                    <TableCell>\n                        <Typography variant='subtitle2'>Wind</Typography>\n                    </TableCell>\n                    <TableCell>\n                        <Typography variant='body2'>\n                            {metersPerSecondToMph(currentConditions.windSpeed.value)} mph {getCardinalDirection(currentConditions.windDirection.value)}\n                        </Typography>\n                    </TableCell>\n                </TableRow>\n                {currentConditions.windGust.value && <TableRow className='mobile-wind'>\n                    <TableCell>\n                        <Typography variant='subtitle2'>Gusting</Typography>\n                    </TableCell>\n                    <TableCell>\n                        <Typography variant='body2'>\n                            {metersPerSecondToMph(currentConditions.windGust.value)} mph\n                        </Typography>\n                    </TableCell>\n                </TableRow>}\n\n            <TableRow>\n                <TableCell>\n                <Typography variant='subtitle2'>Humidity</Typography>\n                </TableCell>\n                <TableCell>\n                <Typography variant='body2'>{\n                    Math.round(currentConditions.relativeHumidity.value)\n                }%</Typography>\n                </TableCell>\n            </TableRow>\n\n            <TableRow>\n                <TableCell>\n                <Typography variant='subtitle2'>Dew Point</Typography>\n                </TableCell>\n                <TableCell>\n                <Typography variant='body2'>{\n                    CtoF(currentConditions.dewpoint.value)\n                }°F</Typography>\n                </TableCell>\n            </TableRow>\n\n            <TableRow>\n                <TableCell>\n                <Typography variant='subtitle2'>Visiblity</Typography>\n                </TableCell>\n                <TableCell>\n                <Typography variant='body2'>{\n                    metersToMiles(currentConditions.visibility.value)\n                } mi</Typography>\n                </TableCell>\n            </TableRow>\n\n            <TableRow>\n                <TableCell>\n                <Typography variant='subtitle2'>Pressure</Typography>\n                </TableCell>\n                <TableCell>\n                <Typography variant='body2'>{\n                    Math.round(currentConditions.barometricPressure.value * 0.01)\n                } mb</Typography>\n                </TableCell>\n            </TableRow>\n\n            </TableBody>\n        </Table>\n    </div>\n}","import React from 'react';\nimport {ResponsiveLine, LineSvgProps} from '@nivo/line';\nimport {Typography} from '@material-ui/core';\nimport moment from 'moment';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\ninterface WeatherLine extends LineSvgProps {\n    areaBaselineValue?: number;\n}\n\nexport default function WeatherLine({axisBottom, axisLeft, ...props}: WeatherLine) {\n    const isMobile = useMediaQuery('(max-width: 500px)');\n\n    return <ResponsiveLine\n        margin={{ top: 20, right: 20, bottom: 50, left: 50 }}\n        xScale={{\n            type: 'time',\n            format: 'native',\n            precision: 'day',\n        }}\n        xFormat=\"time:%m/%d %H:00\"\n        yFormat={(value) => `${value}°F`}\n        yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\n        curve='monotoneX'\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n            format: '%a %m/%e',\n            tickValues: 'every day',\n            legendOffset: -12,\n            orient: 'bottom',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: isMobile ? -45 : 0,\n            ...axisBottom,\n        }}\n        axisLeft={{\n            orient: 'left',\n            tickSize: 5,\n            tickValues: 7,\n            tickPadding: 5,\n            tickRotation: 0,\n            legendOffset: -45,\n            legendPosition: 'middle',\n            ...axisLeft,\n        }}\n        colors={{ scheme: 'nivo' }}\n        lineWidth={2}\n        enablePoints={false}\n        enableArea={true}\n        areaOpacity={0.5}\n        useMesh={true}\n        enableSlices='x'\n        sliceTooltip={(slice) => {\n            return <div style={{\n                paddingTop: '2px',\n                paddingBottom: '2px',\n                paddingLeft: '4px',\n                paddingRight: '4px',\n                backgroundColor: '#fff',\n                border: '1px solid #eee',\n            }}>\n                <Typography variant='subtitle2'>\n                {slice.slice.points[0].data.yFormatted} @ {moment(slice.slice.points[0].data.x).format('hA')}\n                </Typography>\n            </div>\n        }}\n        {...props}\n    />\n}","import React, {useState, useEffect} from 'react';\nimport moment from 'moment';\nimport WeatherLine from './WeatherLine';\nimport {CtoF} from './util';\n\nexport default function HourlyGraphs() {\n    const [hourlyForecast, setHourlyForecast] = useState<any>(undefined);\n\n    async function fetchHourlyForecast() {\n        const hourly = await fetch('https://api.weather.gov/gridpoints/MPX/109,70')\n            .then(res => res.json())\n            .then(res => res.properties);\n\n        // Convert windspeed from knots to mph\n        hourly.windSpeed.data = hourly.windSpeed.values.map((d: any) => {\n            return {\n                ...d,\n                x: moment(d.validTime.split('/')[0]).toDate(),\n                y: Math.round(d.value * 1.15078),\n            }\n        });\n\n        // Convert temp from C to F\n        hourly.temperature.data = hourly.temperature.values.map((d: any) => {\n            return {\n                ...d,\n                x: moment(d.validTime.split('/')[0]).toDate(),\n                y: CtoF(d.value),\n                value: CtoF(d.value),\n            }\n        });\n\n        hourly.skyCover.data = hourly.skyCover.values.map((d: any) => {\n            return {\n                ...d,\n                x: moment(d.validTime.split('/')[0]).toDate(),\n                y: d.value,\n            }\n        });\n\n        hourly.probabilityOfPrecipitation.data = hourly.probabilityOfPrecipitation.values.map((d: any) => {\n            return {\n                ...d,\n                x: moment(d.validTime.split('/')[0]).toDate(),\n                y: d.value,\n            }\n        });\n\n        // Nivo needs an id\n        hourly.windSpeed['id'] = 'windSpeed';\n        hourly.skyCover['id'] = 'skyCover';\n        hourly.temperature['id'] = 'temperature';\n        hourly.probabilityOfPrecipitation['id'] = 'probabilityOfPrecipitation';\n\n        setHourlyForecast(hourly);\n    }\n\n    useEffect(() => {\n        fetchHourlyForecast();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (!hourlyForecast) return null;\n\n    const height = '200px';\n\n\n    const times = hourlyForecast.temperature.data.map((d: any) => moment(d.x))\n    const minDay = moment.min(...times).startOf('day').add(1, 'day');\n    const maxDay = moment.max(...times).startOf('day');\n\n    const range = maxDay.diff(minDay, 'days');\n    const days = [minDay.toDate()]\n\n    for (let i = 1; i <= range; i++) {\n        days.push(minDay.clone().add(i, 'days').toDate())\n    }\n\n    return <div>\n        <div style={{height, userSelect: 'none'}}>\n            <WeatherLine\n                data={[hourlyForecast.temperature]}\n                areaBaselineValue={Math.min(...hourlyForecast.temperature.data.map((d: any) => d.value)) - 10}\n                yScale={{\n                    type: 'linear',\n                    min: Math.min(...hourlyForecast.temperature.data.map((d: any) => d.value)) - 10,\n                    max: Math.max(...hourlyForecast.temperature.data.map((d: any) => d.value)) + 10,\n                }}\n                yFormat={(value) => `${value}°F`}\n                axisLeft={{\n                    legend: 'Degrees F',\n                    format: (value) => `${value}°`,\n                }}\n                axisBottom={{tickValues: days}}\n                colors={'#ff8833'}\n            />\n        </div>\n\n        <div style={{height, userSelect: 'none'}}>\n            <WeatherLine\n                data={[hourlyForecast.skyCover]}\n                yFormat={(value) => `${value}%`}\n                yScale={{\n                    type: 'linear',\n                    min: 0,\n                    max: 100,\n                }}\n                axisLeft={{\n                    legend: 'Cloud cover',\n                    tickValues: [0, 25, 50, 75, 100],\n                    format: (value) => `${value}%`,\n                }}\n                axisBottom={{tickValues: days}}\n                colors={'#a3a3a3'}\n            />\n        </div>\n\n        <div style={{height, userSelect: 'none'}}>\n            <WeatherLine\n                data={[hourlyForecast.probabilityOfPrecipitation]}\n                yFormat={(value) => `${value}%`}\n                yScale={{\n                    type: 'linear',\n                    min: 0,\n                    max: 100,\n                }}\n                axisLeft={{\n                    legend: 'Chance of Precip',\n                    tickValues: [0, 25, 50, 75, 100],\n                    format: (value) => `${value}%`,\n                }}\n                axisBottom={{tickValues: days}}\n                colors={'#15aadc'}\n            />\n        </div>\n\n        <div style={{height, userSelect: 'none'}}>\n            <WeatherLine\n                data={[hourlyForecast.windSpeed]}\n                yFormat={(value) => `${value} mph`}\n                yScale={{\n                    type: 'linear',\n                    min: 0,\n                    max: Math.max(...hourlyForecast.windSpeed.data.map((d: any) => d.value)) + 2,\n                }}\n                axisLeft={{legend: 'Wind Speed (mph)'}}\n                axisBottom={{tickValues: days}}\n                colors={'#15aadc'}\n                enableArea={false}\n            />\n        </div>\n    </div>\n}","import React, {useEffect, useState, useMemo} from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport Slider from '@material-ui/core/Slider';\nimport moment from 'moment';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport IconButton from '@material-ui/core/IconButton';\n\nmapboxgl.accessToken = 'pk.eyJ1Ijoiam9obmpjeiIsImEiOiJjazc5OW91M3UwMTEzM2ZxdTg0a3RlNHVkIn0.ebttXrA6i4iH0lxBLDGmjQ';\n\nexport default function Radar() {\n    const [map, setMap] = useState<mapboxgl.Map | undefined>();\n    const [startTime] = useState(moment().valueOf());\n    const [time, setTime] = useState(startTime);\n    const timeIntervals = useMemo(() => getTimeIntervals(startTime), []);\n    const [loopState, setLoopState] = useState<'loading'|'playing'|undefined>(undefined);\n    const [loop, setLoop] = useState<NodeJS.Timeout | undefined>(undefined);\n\n    async function getRadarLoop() {\n        if (!map) return;\n        setLoopState('loading');\n        // Get a radar url for each time interval\n        const radarPromises = timeIntervals.map(interval => fetch(getRadarUrl(map, interval.value)));\n\n        await Promise.all(radarPromises);\n        setLoopState('playing');\n    }\n\n    useEffect(() => {\n        const innerMap = new mapboxgl.Map({\n            container: 'map',\n            maxZoom: 12,\n            minZoom: 4,\n            zoom: 10,\n            center: [-93.20523, 44.94776],\n            style: 'mapbox://styles/johnjcz/ck7t9f4aq2wuy1imokjil5qxm',\n            hash: true\n        });\n\n        setMap(innerMap);\n\n        innerMap.on('load', () => {\n            const bounds = innerMap.getBounds()\n\n            innerMap.addSource('radar', {\n                'type': 'image',\n                'url': getRadarUrl(innerMap),\n                'coordinates': [\n                    bounds.getNorthWest().toArray(),\n                    bounds.getNorthEast().toArray(),\n                    bounds.getSouthEast().toArray(),\n                    bounds.getSouthWest().toArray(),\n                ]\n            })\n\n            innerMap.addLayer({\n                'id': 'radar',\n                'source': 'radar',\n                'type': 'raster',\n                'paint': {\n                    'raster-opacity': 0.75,\n                    'raster-fade-duration': 0,\n                }\n            },)\n\n        })\n\n        innerMap.on('movestart', () => {\n            innerMap.setPaintProperty('radar', 'raster-opacity', 0)\n            if (loopState === 'playing') {\n                pauseLoop();\n            }\n        })\n\n        innerMap.on('moveend', async () => {\n            // Hack into the loading state\n            setLoopState('loading');\n            const bounds = innerMap.getBounds();\n            const radarSource = innerMap.getSource('radar') as mapboxgl.ImageSource;\n            const radarUrl = getRadarUrl(innerMap);\n\n            await fetch(radarUrl);\n\n            radarSource.updateImage({\n                url: radarUrl,\n                coordinates: [\n                    bounds.getNorthWest().toArray(),\n                    bounds.getNorthEast().toArray(),\n                    bounds.getSouthEast().toArray(),\n                    bounds.getSouthWest().toArray(),\n                ]\n            })\n            // A delay helps prevent the illusion of the radar jumping around\n            setTimeout(() => {\n                innerMap.setPaintProperty('radar', 'raster-opacity', 0.75);\n                setLoopState(undefined);\n            }, 400);\n\n        });\n\n    }, []);\n\n    useEffect(() => {\n        if (!map) return;\n\n        if (loopState === 'playing') {\n            let currentInterval = 0;\n\n            timeIntervals.forEach((interval, idx) => {\n                if (interval.value === time) {\n                    currentInterval = idx + 1;\n                }\n            });\n\n            if (currentInterval > timeIntervals.length - 1) {\n                currentInterval = 0;\n            }\n\n            setLoop(setInterval(() => {\n                (map.getSource('radar') as mapboxgl.ImageSource)\n                    .updateImage({ url: getRadarUrl(map, timeIntervals[currentInterval].value)});\n\n                setTime(timeIntervals[currentInterval].value);\n\n                if (currentInterval === timeIntervals.length - 1) {\n                    currentInterval = 0;\n                } else {\n                    currentInterval++;\n                }\n\n            }, 200))\n        }\n\n        if (loopState === undefined && loop) {\n            pauseLoop();\n        }\n\n    }, [loopState]);\n\n    function pauseLoop() {\n        if (!map || !loop) return;\n        clearInterval(loop);\n        setLoop(undefined);\n        (map.getSource('radar') as mapboxgl.ImageSource)\n                .updateImage({ url: getRadarUrl(map)});\n    }\n\n    function getRadarUrl(map: mapboxgl.Map, forceTime?: number) {\n\n        const bounds = map.getBounds().toArray()\n        const southWest = bounds[0]\n        const northEast = bounds[1]\n\n        const params = {\n            dpi: '96',\n            transparent: 'true',\n            format: 'png32',\n            // The type defintions for URLSearchParams want all values to be strings\n            time: forceTime ? `${forceTime}` : `${time}`,\n            bbox: `${southWest.join(',')},${northEast.join(',')}`,\n            bboxSR: '4326',\n            imageSR: '4326',\n            size: `${window.innerWidth},${window.innerHeight}`,\n            f: 'image',\n        }\n\n        const queryString = new URLSearchParams(params).toString()\n        return `https://nowcoast.noaa.gov/arcgis/rest/services/nowcoast/radar_meteo_imagery_nexrad_time/MapServer/export?dynamicLayers=%5B%7B%22id%22%3A3%2C%22name%22%3A%22Image%22%2C%22source%22%3A%7B%22type%22%3A%22mapLayer%22%2C%22mapLayerId%22%3A3%7D%2C%22minScale%22%3A0%2C%22maxScale%22%3A0%7D%5D&${queryString}`\n\n    }\n\n    function updateRadar() {\n        if (!map) return;\n\n        (map.getSource('radar') as mapboxgl.ImageSource).updateImage({\n            url: getRadarUrl(map)\n        });\n\n    }\n\n    return <div>\n        <div id='map' style={{position: 'absolute', top: 0, bottom: 0, width: '100%'}}></div>\n        <div style={{\n            position: 'absolute',\n            bottom: 0,\n            left: 0,\n            // TODO: mobile remove right: 0\n            right: 0,\n            margin: '0 auto',\n            marginBottom: '35px',\n            paddingBottom: '8px',\n            paddingTop: '16px',\n            paddingRight: '32px',\n            paddingLeft: '16px',\n            // TODO: mobile width 230\n            width: '275px',\n            backgroundColor: 'rgba(255,255,255,0.8)',\n            borderRadius: '6px',\n        }}>\n            {loopState === undefined && <IconButton\n                style={{marginRight: '8px', display: 'inline'}}\n                onClick={() => getRadarLoop()}\n            >\n                <PlayArrowIcon/>\n            </IconButton>}\n            {loopState === 'loading' && <CircularProgress size={23} style={{padding:'11px', marginRight: '10px'}}/>}\n            {loopState === 'playing' && <IconButton\n                style={{marginRight: '8px', display: 'inline'}}\n                onClick={() => setLoopState(undefined)}\n            >\n                <PauseIcon/>\n            </IconButton>}\n\n            <div style={{\n                width: '200px',\n                height: '51px',\n                position: 'absolute',\n                display: 'inline',\n                marginLeft: '18px',\n                marginRight: '18px',\n            }}>\n                <Slider\n                    marks={timeIntervals}\n                    defaultValue={startTime.valueOf()}\n                    valueLabelDisplay='off'\n                    step={900000}\n                    min={moment(startTime).subtract(4, 'hours').valueOf()}\n                    max={startTime}\n                    onChangeCommitted={(event, value) => {\n                        setTime((value as number));\n                        updateRadar();\n                    }}\n                    value={time}\n                />\n            </div>\n\n        </div>\n    </div>\n}\n\nfunction getTimeIntervals(startTime: number) {\n    return [\n        {\n            value: moment(startTime).subtract(4, 'hours').valueOf(),\n            label: moment(startTime).subtract(4, 'hours').format('H:mm'),\n        },\n        {\n            value: moment(startTime).subtract(3.5, 'hours').valueOf(),\n        },\n        {\n            value: moment(startTime).subtract(3.25, 'hours').valueOf(),\n        },\n        {\n            value: moment(startTime).subtract(3, 'hours').valueOf(),\n            label: moment(startTime).subtract(3, 'hours').format('H:mm'),\n        },\n        {\n            value: moment(startTime).subtract(2.5, 'hours').valueOf(),\n        },\n        {\n            value: moment(startTime).subtract(2.25, 'hours').valueOf(),\n        },\n        {\n            value: moment(startTime).subtract(2, 'hours').valueOf(),\n            label: moment(startTime).subtract(2, 'hours').format('H:mm'),\n        },\n        {\n            value: moment(startTime).subtract(1.5, 'hours').valueOf(),\n        },\n        {\n            value: moment(startTime).subtract(1.25, 'hours').valueOf(),\n        },\n        {\n            value: moment(startTime).subtract(1, 'hours').valueOf(),\n            label: moment(startTime).subtract(1, 'hours').format('H:mm'),\n        },\n        {\n            value: moment(startTime).subtract(0.5, 'hours').valueOf(),\n        },\n        {\n            value: moment(startTime).subtract(0.25, 'hours').valueOf(),\n        },\n        {\n            value: startTime,\n            label: moment(startTime).format('H:mm'),\n        },\n    ]\n}","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\n\n\nconst theme = createMuiTheme({});\n\nexport default responsiveFontSizes(theme);","import React from 'react';\nimport {BrowserRouter, Switch, Route, Link} from 'react-router-dom';\n\nimport './App.css';\n\nimport Forecast from './Forecast';\nimport CurrentConditions from './CurrentConditions';\nimport HourlyGraphs from './HourlyGraphs';\nimport Radar from './Radar';\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport theme from './theme';\nimport Fab from '@material-ui/core/Fab';\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\nimport SatelliteIcon from '@material-ui/icons/Satellite';\n\nfunction App() {\n  const fabStyle: React.CSSProperties = {\n    position: 'fixed',\n    bottom: '25px',\n    right: 0,\n    margin: '16px',\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <Switch>\n\n          <Route path='/radar'>\n            <Radar />\n            <Link to='/'>\n              <Fab color='primary' aria-label=\"forecast\" style={fabStyle}>\n                <WbSunnyIcon />\n              </Fab>\n            </Link>\n\n          </Route>\n\n          <Route path='/'>\n            <div className='App' style={{maxWidth: '1000px', margin: '0 auto', padding: '25px'}}>\n              <CurrentConditions/>\n              <Forecast/>\n              <HourlyGraphs/>\n              <Link to='/radar'>\n                <Fab color='primary' aria-label=\"radar\" style={fabStyle}>\n                  <SatelliteIcon />\n                </Fab>\n              </Link>\n            </div>\n          </Route>\n\n        </Switch>\n      </BrowserRouter>\n\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}