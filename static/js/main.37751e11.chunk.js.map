{"version":3,"sources":["icons/partly_cloudy.svg","icons/partly_cloudy_windy.svg","icons/rain.svg","icons/sun_thunderstorm.svg","icons/cloudy_windy.svg","icons/sun.svg","icons/mostly_cloudy.svg","icons/cloudy.svg","icons/snow.svg","icons/sunny_rain.svg","icons/thunderstorm.svg","icons/blizzard.svg","icons/windy.svg","ForecastCard.tsx","ForecastModal.tsx","Forecast.tsx","util/index.tsx","util/getCardinalDirection.tsx","CurrentConditions.tsx","WeatherLine.tsx","HourlyGraphs.tsx","icons.tsx","ForecastPage.tsx","Radar.tsx","Header.tsx","theme.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","cardRoot","margin","width","height","display","cardRootMobile","padding","cardContentMobile","paddingBottom","ForecastCard","period","restProps","isMobile","useMediaQuery","classes","dayFormat","Card","root","CardContent","Typography","variant","style","fontFamily","moment","startTime","format","alignItems","justifyContent","src","icon","alt","textAlign","marginLeft","paddingTop","color","maxTemp","minTemp","fontWeight","windSpeed","windDirection","shortForecast","Transition","React","forwardRef","props","ref","Slide","direction","ForecastModal","day","open","setOpen","Dialog","TransitionComponent","keepMounted","onClose","DialogTitle","DialogContent","marginBottom","marginRight","temperature","detailedForecast","night","marginTop","DialogActions","Button","onClick","Forecast","data","useState","forecastModalOpen","setForecastModalOpen","activeForcast","setActiveForcast","overflowX","map","idx","key","Table","TableBody","i","TableRow","TableCell","CtoF","d","Math","round","metersPerSecondToMph","m","parseIcon","iconUrl","replace","split","slice","percent","parseInt","sort","a","b","getCardinalDirection","heading","CurrentConditions","value","feelsLike","transform","windGust","CurrentDetails","size","className","relativeHumidity","dewpoint","visibility","barometricPressure","WeatherLine","axisBottom","axisLeft","top","right","bottom","left","xScale","type","precision","xFormat","yFormat","yScale","min","max","stacked","reverse","curve","axisTop","axisRight","tickValues","legendOffset","orient","tickSize","tickPadding","tickRotation","legendPosition","colors","scheme","lineWidth","enablePoints","enableArea","areaOpacity","useMesh","enableSlices","sliceTooltip","paddingLeft","paddingRight","backgroundColor","border","points","yFormatted","x","HourlyGraphs","times","minDay","startOf","add","range","diff","days","toDate","push","clone","userSelect","areaBaselineValue","legend","skyCover","probabilityOfPrecipitation","Sun","PartlyCloudy","MostlyCloudy","Cloudy","Windy","PartlyCloudyWindy","CloudyWindy","Snow","Rain","SunnyRain","Thunderstorm","SunThunderstorm","Blizzard","ForecastPage","currentConditions","undefined","forecast","hourlyForecast","setData","lastRefresh","setLastRefresh","fetchData","Promise","fetchCurrentConditions","fetchForecast","fetchHourlyForecast","all","useEffect","document","addEventListener","duration","asMinutes","maxWidth","fetch","then","res","json","response","parsedIcons","properties","icons","windChill","heatIndex","parsed","periods","temps","parsedIcon","balmyIcon","precip","filter","name","length","isDaytime","hourly","values","validTime","y","Radar","setMap","valueOf","time","setTime","timeIntervals","useMemo","subtract","label","getTimeIntervals","loopState","setLoopState","loop","setLoop","radarPromises","interval","getRadarUrl","pauseLoop","clearInterval","getSource","updateImage","url","forceTime","bounds","getBounds","toArray","southWest","northEast","params","dpi","transparent","bbox","join","bboxSR","imageSR","window","innerWidth","innerHeight","f","queryString","URLSearchParams","toString","innerMap","mapboxgl","Map","container","maxZoom","minZoom","zoom","center","hash","on","addSource","getNorthWest","getNorthEast","getSouthEast","getSouthWest","addLayer","setPaintProperty","radarSource","radarUrl","coordinates","setTimeout","currentInterval","forEach","setInterval","id","position","borderRadius","IconButton","getRadarLoop","CircularProgress","Slider","marks","defaultValue","valueLabelDisplay","step","onChangeCommitted","event","accessToken","Header","location","useLocation","AppBar","Toolbar","flexGrow","to","textDecoration","pathname","startIcon","theme","createMuiTheme","palette","primary","500","responsiveFontSizes","App","ThemeProvider","path","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.37751e11.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/partly_cloudy.4ae3e84d.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly_cloudy_windy.bb410bac.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.633504b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun_thunderstorm.092af83d.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy_windy.475f49b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.c536ba25.svg\";","module.exports = __webpack_public_path__ + \"static/media/mostly_cloudy.9bed9624.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.e3f4d975.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.7f879cdd.svg\";","module.exports = __webpack_public_path__ + \"static/media/sunny_rain.bdf06b84.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunderstorm.41430d17.svg\";","module.exports = __webpack_public_path__ + \"static/media/blizzard.4181412c.svg\";","module.exports = __webpack_public_path__ + \"static/media/windy.d1a8592d.svg\";","import React from 'react';\nimport Card, {CardProps} from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport {Typography} from '@material-ui/core';\nimport {BalmyForecast} from './types/ForecastPeriod';\nimport moment from 'moment';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {makeStyles} from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    cardRoot: {\n        margin: '8px',\n        width: '230px',\n        height: '175px',\n        display: 'inline-block'\n    },\n    cardRootMobile: {\n        margin: '4px',\n        padding: '4px',\n        width: '110px',\n        height: '100px',\n        display: 'inline-block'\n    },\n    cardContentMobile: {\n        padding: '4px',\n        '&:last-child': {\n            paddingBottom: 0,\n        }\n    }\n})\nexport default function ForecastCard({period, ...restProps}: CardProps & {period: BalmyForecast}) {\n    const isMobile = useMediaQuery('(max-width: 500px)');\n    const classes = useStyles();\n\n    const dayFormat = isMobile ? 'ddd D' : 'dddd MMM D';\n\n    return <Card classes={{\n        root: isMobile ? classes.cardRootMobile : classes.cardRoot,\n    }} {...restProps}>\n        <CardContent classes={{root: isMobile ? classes.cardContentMobile : ''}}>\n            <Typography variant='subtitle1' style={{fontFamily: 'Spartan'}}>\n               {moment(period.startTime).format(dayFormat)}\n            </Typography>\n\n            <div style={{\n                display: isMobile ? 'block': 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n            }}>\n\n                <div style={{display: isMobile ? 'block' : 'inline-block'}}>\n                    <img src={period.icon} style={{height: isMobile ? '30px' : '45px'}} alt=''/>\n                </div>\n\n                <div style={{\n                    display: isMobile ? 'block' : 'inline-block',\n                    textAlign: 'center',\n                    marginLeft: isMobile ? 0 : '16px',\n                    paddingTop: isMobile ? '4px': '8px',\n                    paddingBottom: isMobile ? 0 : '8px'\n                }}>\n                    <Typography variant='h6'>\n                        <span style={{color: '#d5202a'}}>{period.maxTemp}</span>°{' | '}\n                        <span style={{color: '#0053ae'}}>{period.minTemp}</span>°<span style={{fontWeight: 400}}>F</span>\n                    </Typography>\n\n                    {!isMobile && <Typography variant='body2'>\n                        {period.windSpeed} {period.windDirection}\n                    </Typography>}\n                </div>\n            </div>\n\n            {!isMobile && <Typography variant='body2'>{period.shortForecast}</Typography>}\n        </CardContent>\n    </Card>\n}","import React from 'react';\nimport {Typography} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport {BalmyForecast} from './types/ForecastPeriod';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { TransitionProps } from '@material-ui/core/transitions';\nimport moment from 'moment';\n\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\n    ref: React.Ref<unknown>,\n) {\n    return <Slide direction='up' ref={ref} {...props} />;\n});\n\ninterface ForecastModalProps {\n    day: BalmyForecast | undefined;\n    open: boolean;\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\nexport default function ForecastModal({day, open, setOpen}: ForecastModalProps) {\n    if (!day) return null;\n    return (\n    <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={() => setOpen(false)}\n    >\n        <DialogTitle>{moment(day.startTime).format('dddd MMM Do')}</DialogTitle>\n        <DialogContent>\n            <div style={{paddingBottom: '24px'}}>\n                <div style={{display: 'flex', alignItems: 'center', marginBottom: '16px'}}>\n                    <img src={day.icon} style={{height: '75px', marginRight: '16px'}} alt=''/>\n                    <Typography variant='h6'>\n                        <span style={{color: '#d5202a'}}>{day.temperature}</span>°F\n                    </Typography>\n                </div>\n                <Typography variant='body1'>\n                    {day.detailedForecast}\n                </Typography>\n            </div>\n\n            {day.night && <div>\n                <Typography variant='h6'>Overnight</Typography>\n                <div style={{display: 'flex', alignItems: 'center', marginTop: '16px', marginBottom: '16px'}}>\n                    <img src={day.night.icon} style={{height: '75px', marginRight: '16px'}} alt=''/>\n                    <Typography variant='h6'>\n                        <span style={{color: '#d5202a'}}>{day.night.temperature}</span>°F\n                    </Typography>\n                </div>\n                <Typography variant='body1'>\n                    {day.night.detailedForecast}\n                </Typography>\n            </div>}\n\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={() => setOpen(false)} color=\"primary\">\n                Close\n            </Button>\n        </DialogActions>\n    </Dialog>\n    );\n}","import React, {useState} from 'react';\nimport moment from 'moment';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Typography} from '@material-ui/core';\nimport {BalmyForecast} from './types/ForecastPeriod';\nimport ForecastCard from './ForecastCard';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport ForecastModal from './ForecastModal';\n\n\nexport default function Forecast({data}: {data: BalmyForecast[] | undefined}) {\n    const isMobile = useMediaQuery('(max-width: 500px)');\n    const [forecastModalOpen, setForecastModalOpen] = useState(false);\n    const [activeForcast, setActiveForcast] = useState<BalmyForecast | undefined>();\n\n    if (!data) return null;\n\n    return <>\n        <div style={{overflowX: 'scroll'}}>\n            <div style={{\n              width: isMobile ? '900px' : '1750px',\n              display: 'flex',\n              paddingTop: '16px',\n              paddingBottom: '16px'\n            }}>\n                {data.map((day, idx) => {\n                  return <ForecastCard\n                    key={idx}\n                    period={day}\n                    onClick={() => {\n                      setForecastModalOpen(true);\n                      setActiveForcast(day);\n                    }}/>\n                })}\n            </div>\n        </div>\n        {!isMobile && <Table>\n            <TableBody>\n            {data.map((day, i) => {\n            return <TableRow key={i}>\n                 <TableCell style={{padding: isMobile ? '10px' : '16px'}}>\n                      <Typography variant='body2'>{moment(day.startTime).format('ddd')} {moment(day.startTime).format('M/D')}</Typography>\n                  </TableCell>\n                  <TableCell style={{padding: isMobile ? '10px' : '16px'}}>\n                      <Typography variant='body2'>\n                          <span style={{color: '#d5202a'}}>{day.maxTemp}</span>°{' | '}\n                          <span style={{color: '#0053ae'}}>{day.minTemp}</span>°\n                          <span style={{fontWeight: 400}}>F</span>\n                      </Typography>\n                  </TableCell >\n                  <TableCell style={{padding: isMobile ? '10px' : '16px'}}>\n                      <Typography variant='body2'>{day.windSpeed} {day.windDirection}</Typography>\n                  </TableCell>\n                  {!isMobile && <TableCell style={{width: '50%', textAlign: 'left', padding: isMobile ? '10px' : '16px'}}>\n                      <Typography variant='body2'>{day.detailedForecast}</Typography>\n                  </TableCell>}\n              </TableRow>\n            })}\n            </TableBody>\n        </Table>}\n        <ForecastModal day={activeForcast} open={forecastModalOpen} setOpen={setForecastModalOpen} />\n    </>\n}","\nexport function CtoF(d: number) {\n    return Math.round((d * 9/5) + 32);\n}\n\nexport function metersPerSecondToMph(m: number) {\n    return Math.round(m * 2.23694)\n}\n\nexport function metersToMiles(m: number) {\n    return Math.round(m * 0.0006213712);\n}\n\nexport function parseIcon(iconUrl: string) {\n    return iconUrl\n        .replace('https://api.weather.gov/icons/', '')\n        .split('?')[0]\n        .split('/')\n        .slice(2)\n        .map(d => d.split(','))\n        .map(d => { return {icon: d[0], percent: parseInt(d[1]) }})\n        .sort((a, b) => b.percent - a.percent);\n}\n","  export default function getCardinalDirection(heading: number) {\n    // Principle winds + half-winds defintions via https://en.wikipedia.org/wiki/Points_of_the_compass\n    // 22.49deg between each step\n    switch(true) {\n      case (heading >= 348.76 || heading <= 11.25):\n        return 'N'\n      case heading >= 11.26 && heading <= 33.75:\n        return 'NNE'\n      case heading >= 33.76 && heading <= 56.25:\n        return 'NE'\n      case heading >= 56.26 && heading <= 78.75:\n        return 'ENE'\n      case heading >= 78.76 && heading <= 101.25:\n        return 'E'\n      case heading >= 101.26 && heading <= 123.75:\n        return 'ESE'\n      case heading >= 123.76 && heading <= 146.25:\n        return 'SE'\n      case heading >= 146.26 && heading <= 168.75:\n        return 'SSE'\n      case heading >= 168.76 && heading <= 191.25:\n        return 'S'\n      case heading >= 191.26 && heading <= 213.75:\n        return 'SSW'\n      case heading >= 213.76 && heading <= 236.25:\n        return 'SW'\n      case heading >= 236.26 && heading <= 258.75:\n        return 'WSW'\n      case heading >= 258.76 && heading <= 281.25:\n        return 'W'\n      case heading >= 281.26 && heading <= 303.75:\n        return 'WNW'\n      case heading >= 303.76 && heading <= 326.25:\n        return 'NW'\n      case heading >= 326.26 && heading <= 348.75:\n        return 'NNW'\n      default:\n        return 'N/A'\n    }\n  }","import React from 'react';\nimport {Typography} from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport {CtoF, metersToMiles, metersPerSecondToMph} from './util';\nimport getCardinalDirection from './util/getCardinalDirection';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nexport default function CurrentConditions({data}: {data: any | undefined}) {\n    const isMobile = useMediaQuery('(max-width: 500px)');\n\n    if (!data) return null;\n\n    return <div>\n    <div style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-evenly',\n        padding: isMobile ? 0 : '40px',\n    }}>\n        <div>\n            <img\n                src={data.icon}\n                style={{width: isMobile ? '130px': '175px'}}\n                alt=''\n            />\n        </div>\n        <div>\n            <Typography variant={isMobile ? 'h2': 'h1'} style={{fontFamily: 'Spartan'}}>\n                {CtoF(data.temperature.value)}°F\n            </Typography>\n            {data.feelsLike && <Typography variant='h5'>\n                Feels like {CtoF(data.feelsLike)}°F\n            </Typography>}\n            {!isMobile && <div>\n                <Typography variant='h3' style={{display: 'inline-block'}}>\n                    <NavigationIcon style={{\n                        transform: `rotate(${data.windDirection.value - 180}deg)`,\n                        marginRight: '8px',\n                    }}/>\n                    {metersPerSecondToMph(data.windSpeed.value)}\n                    {data.windGust.value ?\n                    ' | ' + metersPerSecondToMph(data.windGust.value) : ''}\n                </Typography>\n                <Typography variant='h5' style={{display: 'inline-block', marginLeft: '8px'}}>mph</Typography>\n                <Typography variant='h5'  style={{display: 'inline-block', marginLeft: '8px'}}>\n                    {getCardinalDirection(data.windDirection.value)}\n                </Typography>\n            </div>}\n        </div>\n\n        {!isMobile && <CurrentDetails data={data} /> }\n    </div>\n        {isMobile && <CurrentDetails data={data} /> }\n    </div>;\n}\n\nfunction CurrentDetails({data}: {data: any}) {\n    if (!data) return null\n    return <div>\n        <Table size=\"small\" >\n            <TableBody>\n                <TableRow className='mobile-wind'>\n                    <TableCell>\n                        <Typography variant='subtitle2'>Wind</Typography>\n                    </TableCell>\n                    <TableCell>\n                        <Typography variant='body2'>\n                            {metersPerSecondToMph(data.windSpeed.value)} mph {getCardinalDirection(data.windDirection.value)}\n                        </Typography>\n                    </TableCell>\n                </TableRow>\n                {data.windGust.value && <TableRow className='mobile-wind'>\n                    <TableCell>\n                        <Typography variant='subtitle2'>Gusting</Typography>\n                    </TableCell>\n                    <TableCell>\n                        <Typography variant='body2'>\n                            {metersPerSecondToMph(data.windGust.value)} mph\n                        </Typography>\n                    </TableCell>\n                </TableRow>}\n\n            <TableRow>\n                <TableCell>\n                <Typography variant='subtitle2'>Humidity</Typography>\n                </TableCell>\n                <TableCell>\n                <Typography variant='body2'>{\n                    Math.round(data.relativeHumidity.value)\n                }%</Typography>\n                </TableCell>\n            </TableRow>\n\n            <TableRow>\n                <TableCell>\n                <Typography variant='subtitle2'>Dew Point</Typography>\n                </TableCell>\n                <TableCell>\n                <Typography variant='body2'>{\n                    CtoF(data.dewpoint.value)\n                }°F</Typography>\n                </TableCell>\n            </TableRow>\n\n            <TableRow>\n                <TableCell>\n                <Typography variant='subtitle2'>Visiblity</Typography>\n                </TableCell>\n                <TableCell>\n                <Typography variant='body2'>{\n                    metersToMiles(data.visibility.value)\n                } mi</Typography>\n                </TableCell>\n            </TableRow>\n\n            <TableRow>\n                <TableCell>\n                <Typography variant='subtitle2'>Pressure</Typography>\n                </TableCell>\n                <TableCell>\n                <Typography variant='body2'>{\n                    Math.round(data.barometricPressure.value * 0.01)\n                } mb</Typography>\n                </TableCell>\n            </TableRow>\n\n            </TableBody>\n        </Table>\n    </div>\n}","import React from 'react';\nimport {ResponsiveLine, LineSvgProps} from '@nivo/line';\nimport {Typography} from '@material-ui/core';\nimport moment from 'moment';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\ninterface WeatherLine extends LineSvgProps {\n    areaBaselineValue?: number;\n}\n\nexport default function WeatherLine({axisBottom, axisLeft, ...props}: WeatherLine) {\n    const isMobile = useMediaQuery('(max-width: 500px)');\n\n    return <ResponsiveLine\n        margin={{ top: 20, right: 20, bottom: 50, left: 50 }}\n        xScale={{\n            type: 'time',\n            format: 'native',\n            precision: 'day',\n        }}\n        xFormat=\"time:%m/%d %H:00\"\n        yFormat={(value) => `${value}°F`}\n        yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\n        curve='monotoneX'\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n            format: '%a %m/%e',\n            tickValues: 'every day',\n            legendOffset: -12,\n            orient: 'bottom',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: isMobile ? -45 : 0,\n            ...axisBottom,\n        }}\n        axisLeft={{\n            orient: 'left',\n            tickSize: 5,\n            tickValues: 7,\n            tickPadding: 5,\n            tickRotation: 0,\n            legendOffset: -45,\n            legendPosition: 'middle',\n            ...axisLeft,\n        }}\n        colors={{ scheme: 'nivo' }}\n        lineWidth={2}\n        enablePoints={false}\n        enableArea={true}\n        areaOpacity={0.5}\n        useMesh={true}\n        enableSlices='x'\n        sliceTooltip={(slice) => {\n            return <div style={{\n                paddingTop: '2px',\n                paddingBottom: '2px',\n                paddingLeft: '4px',\n                paddingRight: '4px',\n                backgroundColor: '#fff',\n                border: '1px solid #eee',\n            }}>\n                <Typography variant='subtitle2'>\n                {slice.slice.points[0].data.yFormatted} @ {moment(slice.slice.points[0].data.x).format('hA')}\n                </Typography>\n            </div>\n        }}\n        {...props}\n    />\n}","import React from 'react';\nimport moment from 'moment';\nimport WeatherLine from './WeatherLine';\n\nexport default function HourlyGraphs({data}: {data: any | undefined}) {\n    if (!data) return null;\n\n    const height = '200px';\n\n\n    const times = data.temperature.data.map((d: any) => moment(d.x))\n    const minDay = moment.min(...times).startOf('day').add(1, 'day');\n    const maxDay = moment.max(...times).startOf('day');\n\n    const range = maxDay.diff(minDay, 'days');\n    const days = [minDay.toDate()]\n\n    for (let i = 1; i <= range; i++) {\n        days.push(minDay.clone().add(i, 'days').toDate())\n    }\n\n    return <div>\n        <div style={{height, userSelect: 'none'}}>\n            <WeatherLine\n                data={[data.temperature]}\n                areaBaselineValue={Math.min(...data.temperature.data.map((d: any) => d.value)) - 10}\n                yScale={{\n                    type: 'linear',\n                    min: Math.min(...data.temperature.data.map((d: any) => d.value)) - 10,\n                    max: Math.max(...data.temperature.data.map((d: any) => d.value)) + 10,\n                }}\n                yFormat={(value) => `${value}°F`}\n                axisLeft={{\n                    legend: 'Degrees F',\n                    format: (value) => `${value}°`,\n                }}\n                axisBottom={{tickValues: days}}\n                colors={'#ff8833'}\n            />\n        </div>\n\n        <div style={{height, userSelect: 'none'}}>\n            <WeatherLine\n                data={[data.skyCover]}\n                yFormat={(value) => `${value}%`}\n                yScale={{\n                    type: 'linear',\n                    min: 0,\n                    max: 100,\n                }}\n                axisLeft={{\n                    legend: 'Cloud cover',\n                    tickValues: [0, 25, 50, 75, 100],\n                    format: (value) => `${value}%`,\n                }}\n                axisBottom={{tickValues: days}}\n                colors={'#a3a3a3'}\n            />\n        </div>\n\n        <div style={{height, userSelect: 'none'}}>\n            <WeatherLine\n                data={[data.probabilityOfPrecipitation]}\n                yFormat={(value) => `${value}%`}\n                yScale={{\n                    type: 'linear',\n                    min: 0,\n                    max: 100,\n                }}\n                axisLeft={{\n                    legend: 'Chance of Precip',\n                    tickValues: [0, 25, 50, 75, 100],\n                    format: (value) => `${value}%`,\n                }}\n                axisBottom={{tickValues: days}}\n                colors={'#15aadc'}\n            />\n        </div>\n\n        <div style={{height, userSelect: 'none'}}>\n            <WeatherLine\n                data={[data.windSpeed]}\n                yFormat={(value) => `${value} mph`}\n                yScale={{\n                    type: 'linear',\n                    min: 0,\n                    max: Math.max(...data.windSpeed.data.map((d: any) => d.value)) + 2,\n                }}\n                axisLeft={{legend: 'Wind Speed (mph)'}}\n                axisBottom={{tickValues: days}}\n                colors={'#15aadc'}\n                enableArea={false}\n            />\n        </div>\n    </div>\n}","import Sun from './icons/sun.svg';\nimport PartlyCloudy from './icons/partly_cloudy.svg';\nimport MostlyCloudy from './icons/mostly_cloudy.svg';\nimport Cloudy from './icons/cloudy.svg';\nimport PartlyCloudyWindy from './icons/partly_cloudy_windy.svg';\nimport Snow from './icons/snow.svg';\nimport Rain from './icons/rain.svg';\nimport SunnyRain from './icons/sunny_rain.svg';\nimport Thunderstorm from './icons/thunderstorm.svg';\nimport SunThunderstorm from './icons/sun_thunderstorm.svg';\nimport Blizzard from './icons/blizzard.svg';\nimport Windy from './icons/windy.svg';\nimport CloudyWindy from './icons/cloudy_windy.svg';\n\n// https://thenounproject.com/anusha.narvekar/collection/weather/\nexport default {\n    \"skc\": {\n        \"description\": \"Fair/clear\",\n        \"icon\": Sun,\n    },\n    \"few\": {\n        \"description\": \"A few clouds\",\n        \"icon\": PartlyCloudy,\n    },\n    \"sct\": {\n        \"description\": \"Partly cloudy\",\n        \"icon\": PartlyCloudy,\n    },\n    \"bkn\": {\n        \"description\": \"Mostly cloudy\",\n        \"icon\": MostlyCloudy,\n    },\n    \"ovc\": {\n        \"description\": \"Overcast\",\n        \"icon\": Cloudy,\n    },\n    \"wind_skc\": {\n        \"description\": \"Fair/clear and windy\",\n        \"icon\": Windy,\n    },\n    \"wind_few\": {\n        \"description\": \"A few clouds and windy\",\n        \"icon\": PartlyCloudyWindy,\n    },\n    \"wind_sct\": {\n        \"description\": \"Partly cloudy and windy\",\n        \"icon\": PartlyCloudyWindy,\n    },\n    \"wind_bkn\": {\n        \"description\": \"Mostly cloudy and windy\",\n        \"icon\": CloudyWindy,\n    },\n    \"wind_ovc\": {\n        \"description\": \"Overcast and windy\",\n        \"icon\": CloudyWindy,\n    },\n    \"snow\": {\n        \"description\": \"Snow\",\n        \"icon\": Snow,\n    },\n    \"rain_snow\": {\n        \"description\": \"Rain/snow\"\n    },\n    \"rain_sleet\": {\n        \"description\": \"Rain/sleet\"\n    },\n    \"snow_sleet\": {\n        \"description\": \"Rain/sleet\"\n    },\n    \"fzra\": {\n        \"description\": \"Freezing rain\"\n    },\n    \"rain_fzra\": {\n        \"description\": \"Rain/freezing rain\"\n    },\n    \"snow_fzra\": {\n        \"description\": \"Freezing rain/snow\"\n    },\n    \"sleet\": {\n        \"description\": \"Sleet\"\n    },\n    \"rain\": {\n        \"description\": \"Rain\",\n        \"icon\": Rain,\n    },\n    \"rain_showers\": {\n        \"description\": \"Rain showers (high cloud cover)\",\n        \"icon\": Rain,\n    },\n    \"rain_showers_hi\": {\n        \"description\": \"Rain showers (low cloud cover)\",\n        \"icon\": SunnyRain,\n    },\n    \"tsra\": {\n        \"description\": \"Thunderstorm (high cloud cover)\",\n        \"icon\": Thunderstorm,\n    },\n    \"tsra_sct\": {\n        \"description\": \"Thunderstorm (medium cloud cover)\",\n        \"icon\": SunThunderstorm,\n    },\n    \"tsra_hi\": {\n        \"description\": \"Thunderstorm (low cloud cover)\",\n        \"icon\": SunThunderstorm,\n    },\n    \"tornado\": {\n        \"description\": \"Tornado\"\n    },\n    \"hurricane\": {\n        \"description\": \"Hurricane conditions\"\n    },\n    \"tropical_storm\": {\n        \"description\": \"Tropical storm conditions\"\n    },\n    \"dust\": {\n        \"description\": \"Dust\"\n    },\n    \"smoke\": {\n        \"description\": \"Smoke\"\n    },\n    \"haze\": {\n        \"description\": \"Haze\"\n    },\n    \"hot\": {\n        \"description\": \"Hot\"\n    },\n    \"cold\": {\n        \"description\": \"Cold\"\n    },\n    \"blizzard\": {\n        \"description\": \"Blizzard\",\n        \"icon\": Blizzard,\n    },\n    \"fog\": {\n        \"description\": \"Fog/mist\"\n    }\n}","import React, {useState, useEffect} from 'react';\nimport moment from 'moment';\nimport Forecast from './Forecast';\nimport CurrentConditions from './CurrentConditions';\nimport HourlyGraphs from './HourlyGraphs';\nimport {CtoF, parseIcon} from './util';\nimport icons from './icons';\nimport {ForecastPeriod} from './types/ForecastPeriod';\n\nexport default function ForecastPage() {\n    const [data, setData] = useState<any>({\n        currentConditions: undefined,\n        forecast: undefined,\n        hourlyForecast: undefined,\n    });\n    const [lastRefresh, setLastRefresh] = useState<moment.Moment | undefined>(undefined);\n\n    async function fetchData() {\n        const [currentConditions, forecast, hourlyForecast] = await Promise.all([\n            await fetchCurrentConditions(),\n            await fetchForecast(),\n            await fetchHourlyForecast(),\n        ]);\n\n       setData({currentConditions, forecast, hourlyForecast});\n       setLastRefresh(moment());\n    }\n\n    useEffect(() => {\n        fetchData();\n\n        // If the user puts the page in the background and comes back >= 5 minutes later, refresh\n        document.addEventListener('visibilitychange', () => {\n            const sinceLastRefresh = moment.duration(moment().diff(lastRefresh));\n            if (sinceLastRefresh.asMinutes() >= 5) {\n                fetchData();\n            }\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return <div className='App' style={{maxWidth: '1000px', margin: '0 auto', padding: '25px'}}>\n        <CurrentConditions data={data.currentConditions}/>\n        <Forecast data={data.forecast} />\n        <HourlyGraphs data={data.hourlyForecast}/>\n    </div>\n}\n\n\nasync function fetchCurrentConditions() {\n    const response = await fetch('https://api.weather.gov/stations/KMSP/observations/latest')\n      .then(res => res.json())\n\n    const parsedIcons = parseIcon(response.properties.icon);\n    if (parsedIcons) {\n      response.properties.icon = (icons as any)[parsedIcons[0]?.icon].icon;\n    }\n\n    response.properties['feelsLike'] = (\n        response.properties.windChill.value || response.properties.heatIndex.value\n    );\n    return response.properties;\n}\n\nasync function fetchForecast() {\n    const response = await fetch('https://api.weather.gov/gridpoints/MPX/109,70/forecast')\n      .then(res => res.json());\n\n    const parsed = response.properties.periods\n      .map((period: ForecastPeriod, idx: number) => {\n        const temps = [\n          period.temperature,\n          ...(response.properties.periods[idx] ? [response.properties.periods[idx].temperature] : []),\n          ...(response.properties.periods[idx + 1] ? [response.properties.periods[idx + 1].temperature] : [])\n        ]\n\n        const parsedIcon = parseIcon(period.icon)[0];\n        const balmyIcon = (icons as any)[parsedIcon.icon];\n\n        return {\n          ...period,\n          minTemp: Math.min(...temps),\n          maxTemp: Math.max(...temps),\n          precip: parsedIcon.percent,\n          icon: balmyIcon.icon || period.icon,\n        }\n      });\n\n     const days = parsed.map((day: ForecastPeriod) => {\n        const night = parsed.filter(\n          (period: ForecastPeriod) => {\n            if (period.name === day.name + ' Night') return period;\n            if (day.name === 'Today' && period.name === 'Tonight') return period;\n            return false;\n          }\n        );\n\n        return {\n          ...day,\n          night: night.length ? night[0] : undefined,\n          shortForecast: day.shortForecast.split(' then ')[0],\n\n        }\n      }).filter((period: ForecastPeriod) => period.isDaytime);\n\n    return days;\n}\n\n\nasync function fetchHourlyForecast() {\n    const hourly = await fetch('https://api.weather.gov/gridpoints/MPX/109,70')\n        .then(res => res.json())\n        .then(res => res.properties);\n\n    // Convert windspeed from knots to mph\n    hourly.windSpeed.data = hourly.windSpeed.values.map((d: any) => {\n        return {\n            ...d,\n            x: moment(d.validTime.split('/')[0]).toDate(),\n            y: Math.round(d.value * 1.15078),\n        }\n    });\n\n    // Convert temp from C to F\n    hourly.temperature.data = hourly.temperature.values.map((d: any) => {\n        return {\n            ...d,\n            x: moment(d.validTime.split('/')[0]).toDate(),\n            y: CtoF(d.value),\n            value: CtoF(d.value),\n        }\n    });\n\n    hourly.skyCover.data = hourly.skyCover.values.map((d: any) => {\n        return {\n            ...d,\n            x: moment(d.validTime.split('/')[0]).toDate(),\n            y: d.value,\n        }\n    });\n\n    hourly.probabilityOfPrecipitation.data = hourly.probabilityOfPrecipitation.values.map((d: any) => {\n        return {\n            ...d,\n            x: moment(d.validTime.split('/')[0]).toDate(),\n            y: d.value,\n        }\n    });\n\n    // Nivo needs an id\n    hourly.windSpeed['id'] = 'windSpeed';\n    hourly.skyCover['id'] = 'skyCover';\n    hourly.temperature['id'] = 'temperature';\n    hourly.probabilityOfPrecipitation['id'] = 'probabilityOfPrecipitation';\n\n    return hourly;\n}\n","import React, {useEffect, useState, useMemo} from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport Slider from '@material-ui/core/Slider';\nimport moment from 'moment';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport IconButton from '@material-ui/core/IconButton';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nmapboxgl.accessToken = 'pk.eyJ1Ijoiam9obmpjeiIsImEiOiJjazc5OW91M3UwMTEzM2ZxdTg0a3RlNHVkIn0.ebttXrA6i4iH0lxBLDGmjQ';\n\nexport default function Radar() {\n    const [map, setMap] = useState<mapboxgl.Map | undefined>();\n    const [startTime] = useState(moment().valueOf());\n    const [time, setTime] = useState(startTime);\n    const timeIntervals = useMemo(() => getTimeIntervals(startTime), [startTime]);\n    const [loopState, setLoopState] = useState<'loading'|'playing'|undefined>(undefined);\n    const [loop, setLoop] = useState<NodeJS.Timeout | undefined>(undefined);\n    const isMobile = useMediaQuery('(max-width: 500px)');\n\n    async function getRadarLoop() {\n        if (!map) return;\n        setLoopState('loading');\n        // Get a radar url for each time interval\n        const radarPromises = timeIntervals.map(interval => fetch(getRadarUrl(map, interval.value)));\n\n        await Promise.all(radarPromises);\n        setLoopState('playing');\n    }\n\n    useEffect(() => {\n        const innerMap = new mapboxgl.Map({\n            container: 'map',\n            maxZoom: 12,\n            minZoom: 4,\n            zoom: 10,\n            center: [-93.20523, 44.94776],\n            style: 'mapbox://styles/johnjcz/ck7t9f4aq2wuy1imokjil5qxm',\n            hash: true\n        });\n\n        setMap(innerMap);\n\n        innerMap.on('load', () => {\n            const bounds = innerMap.getBounds()\n\n            innerMap.addSource('radar', {\n                'type': 'image',\n                'url': getRadarUrl(innerMap),\n                'coordinates': [\n                    bounds.getNorthWest().toArray(),\n                    bounds.getNorthEast().toArray(),\n                    bounds.getSouthEast().toArray(),\n                    bounds.getSouthWest().toArray(),\n                ]\n            })\n\n            innerMap.addLayer({\n                'id': 'radar',\n                'source': 'radar',\n                'type': 'raster',\n                'paint': {\n                    'raster-opacity': 0.75,\n                    'raster-fade-duration': 0,\n                }\n            },)\n\n        })\n\n        innerMap.on('movestart', () => {\n            innerMap.setPaintProperty('radar', 'raster-opacity', 0)\n            if (loopState === 'playing') {\n                pauseLoop();\n            }\n        })\n\n        innerMap.on('moveend', async () => {\n            // Hack into the loading state\n            setLoopState('loading');\n            const bounds = innerMap.getBounds();\n            const radarSource = innerMap.getSource('radar') as mapboxgl.ImageSource;\n            const radarUrl = getRadarUrl(innerMap);\n\n            await fetch(radarUrl);\n\n            radarSource.updateImage({\n                url: radarUrl,\n                coordinates: [\n                    bounds.getNorthWest().toArray(),\n                    bounds.getNorthEast().toArray(),\n                    bounds.getSouthEast().toArray(),\n                    bounds.getSouthWest().toArray(),\n                ]\n            })\n            // A delay helps prevent the illusion of the radar jumping around\n            setTimeout(() => {\n                innerMap.setPaintProperty('radar', 'raster-opacity', 0.75);\n                setLoopState(undefined);\n            }, 400);\n\n        });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        if (!map) return;\n\n        if (loopState === 'playing') {\n            let currentInterval = 0;\n\n            timeIntervals.forEach((interval, idx) => {\n                if (interval.value === time) {\n                    currentInterval = idx + 1;\n                }\n            });\n\n            if (currentInterval > timeIntervals.length - 1) {\n                currentInterval = 0;\n            }\n\n            setLoop(setInterval(() => {\n                (map.getSource('radar') as mapboxgl.ImageSource)\n                    .updateImage({ url: getRadarUrl(map, timeIntervals[currentInterval].value)});\n\n                setTime(timeIntervals[currentInterval].value);\n\n                if (currentInterval === timeIntervals.length - 1) {\n                    currentInterval = 0;\n                } else {\n                    currentInterval++;\n                }\n\n            }, 200))\n        }\n\n        if (loopState === undefined && loop) {\n            pauseLoop();\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loopState]);\n\n    function pauseLoop() {\n        if (!map || !loop) return;\n        clearInterval(loop);\n        setLoop(undefined);\n        (map.getSource('radar') as mapboxgl.ImageSource)\n                .updateImage({ url: getRadarUrl(map)});\n    }\n\n    function getRadarUrl(map: mapboxgl.Map, forceTime?: number) {\n\n        const bounds = map.getBounds().toArray()\n        const southWest = bounds[0]\n        const northEast = bounds[1]\n\n        const params = {\n            dpi: '96',\n            transparent: 'true',\n            format: 'png32',\n            // The type defintions for URLSearchParams want all values to be strings\n            time: forceTime ? `${forceTime}` : `${time}`,\n            bbox: `${southWest.join(',')},${northEast.join(',')}`,\n            bboxSR: '4326',\n            imageSR: '4326',\n            size: `${window.innerWidth},${window.innerHeight}`,\n            f: 'image',\n        }\n\n        const queryString = new URLSearchParams(params).toString()\n        return `https://nowcoast.noaa.gov/arcgis/rest/services/nowcoast/radar_meteo_imagery_nexrad_time/MapServer/export?dynamicLayers=%5B%7B%22id%22%3A3%2C%22name%22%3A%22Image%22%2C%22source%22%3A%7B%22type%22%3A%22mapLayer%22%2C%22mapLayerId%22%3A3%7D%2C%22minScale%22%3A0%2C%22maxScale%22%3A0%7D%5D&${queryString}`\n\n    }\n\n    function updateRadar() {\n        if (!map) return;\n\n        (map.getSource('radar') as mapboxgl.ImageSource).updateImage({\n            url: getRadarUrl(map)\n        });\n\n    }\n\n    return <div>\n        <div id='map' style={{position: 'absolute', width: '100%', height: `calc(100% - ${isMobile ? '56' : '64'}px)`}}></div>\n        <div style={{\n            position: 'absolute',\n            bottom: 0,\n            left: 0,\n            right: 0,\n            margin: '0 auto',\n            marginBottom: '35px',\n            paddingBottom: '8px',\n            paddingTop: '8px',\n            width: '325px',\n            backgroundColor: 'rgba(255,255,255,0.8)',\n            borderRadius: '6px',\n            display: 'flex',\n            justifyContent: 'space-evenly',\n            alignItems: 'center',\n        }}>\n            <div >\n                {loopState === undefined && <IconButton\n                    onClick={() => getRadarLoop()}\n                >\n                    <PlayArrowIcon/>\n                </IconButton>}\n                {loopState === 'loading' && <CircularProgress size={23} style={{padding:'11px', marginRight: '10px'}}/>}\n                {loopState === 'playing' && <IconButton\n                    onClick={() => setLoopState(undefined)}\n                >\n                    <PauseIcon/>\n                </IconButton>}\n            </div>\n\n            <div style={{\n                width: '200px',\n                marginLeft: '24px',\n                marginRight: '24px',\n            }}>\n                <Slider\n                    marks={timeIntervals}\n                    defaultValue={startTime.valueOf()}\n                    valueLabelDisplay='off'\n                    step={900000}\n                    min={moment(startTime).subtract(4, 'hours').valueOf()}\n                    max={startTime}\n                    onChangeCommitted={(event, value) => {\n                        setTime((value as number));\n                        updateRadar();\n                    }}\n                    value={time}\n                />\n            </div>\n\n        </div>\n    </div>\n}\n\nfunction getTimeIntervals(startTime: number) {\n    return [\n        {\n            value: moment(startTime).subtract(4, 'hours').valueOf(),\n            label: moment(startTime).subtract(4, 'hours').format('H:mm'),\n        },\n        {\n            value: moment(startTime).subtract(3.5, 'hours').valueOf(),\n        },\n        {\n            value: moment(startTime).subtract(3.25, 'hours').valueOf(),\n        },\n        {\n            value: moment(startTime).subtract(3, 'hours').valueOf(),\n            label: moment(startTime).subtract(3, 'hours').format('H:mm'),\n        },\n        {\n            value: moment(startTime).subtract(2.5, 'hours').valueOf(),\n        },\n        {\n            value: moment(startTime).subtract(2.25, 'hours').valueOf(),\n        },\n        {\n            value: moment(startTime).subtract(2, 'hours').valueOf(),\n            label: moment(startTime).subtract(2, 'hours').format('H:mm'),\n        },\n        {\n            value: moment(startTime).subtract(1.5, 'hours').valueOf(),\n        },\n        {\n            value: moment(startTime).subtract(1.25, 'hours').valueOf(),\n        },\n        {\n            value: moment(startTime).subtract(1, 'hours').valueOf(),\n            label: moment(startTime).subtract(1, 'hours').format('H:mm'),\n        },\n        {\n            value: moment(startTime).subtract(0.5, 'hours').valueOf(),\n        },\n        {\n            value: moment(startTime).subtract(0.25, 'hours').valueOf(),\n        },\n        {\n            value: startTime,\n            label: moment(startTime).format('H:mm'),\n        },\n    ]\n}","import React from 'react';\nimport {Link, useLocation} from 'react-router-dom';\nimport SatelliteIcon from '@material-ui/icons/Satellite';\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nexport default function Header() {\n  const location = useLocation();\n\n  return <AppBar position='static'>\n    <Toolbar>\n      <div style={{flexGrow: 1}}>\n        <Link to='/' style={{textDecoration: 'none'}}>\n          <Typography variant='h5' style={{color: '#fff', fontFamily: 'Spartan'}}>\n            balmy.us\n          </Typography>\n        </Link>\n      </div>\n\n      <div>\n        {location.pathname === '/' && <Link to='/radar' style={{textDecoration: 'none', color: '#fff'}}>\n          <Button startIcon={<SatelliteIcon/>} style={{color: '#fff'}}>\n              Radar\n          </Button>\n        </Link>}\n\n        {location.pathname === '/radar' && <Link to='/' style={{textDecoration: 'none', color: '#fff'}}>\n          <Button startIcon={<WbSunnyIcon/>} style={{color: '#fff'}}>\n              Forecast\n          </Button>\n        </Link>}\n      </div>\n    </Toolbar>\n  </AppBar>\n}\n","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n            primary: {500: \"#F2B705\"},\n            // secondary: green,\n    }\n});\n\nexport default responsiveFontSizes(theme);","import React from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport './App.css';\nimport ForecastPage from './ForecastPage';\nimport Radar from './Radar';\nimport Header from './Header';\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport theme from './theme';\n\nfunction App() {\n\n  return (\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <Header/>\n        <Switch>\n\n          <Route path='/radar'>\n            <Radar />\n          </Route>\n\n          <Route path='/'>\n            <ForecastPage />\n          </Route>\n\n        </Switch>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}