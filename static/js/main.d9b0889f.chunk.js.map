{"version":3,"sources":["icons/partly_cloudy.svg","icons/partly_cloudy_windy.svg","icons/rain.svg","icons/sun_thunderstorm.svg","icons/cloudy_windy.svg","icons/sun.svg","icons/mostly_cloudy.svg","icons/cloudy.svg","icons/snow.svg","icons/sunny_rain.svg","icons/thunderstorm.svg","icons/blizzard.svg","icons/windy.svg","ForecastCard.tsx","ForecastModal.tsx","Forecast.tsx","util/index.tsx","util/getCardinalDirection.tsx","CurrentConditions.tsx","WeatherLine.tsx","HourlyGraphs.tsx","icons.tsx","ForecastPage.tsx","Radar.tsx","Header.tsx","theme.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","cardRoot","margin","width","height","display","cursor","cardRootMobile","padding","cardContentMobile","paddingBottom","ForecastCard","period","restProps","isMobile","useMediaQuery","classes","dayFormat","Card","root","CardContent","Typography","variant","style","fontFamily","dayjs","startTime","format","alignItems","justifyContent","src","icon","alt","textAlign","marginLeft","paddingTop","color","maxTemp","minTemp","fontWeight","windSpeed","windDirection","shortForecast","Transition","React","forwardRef","props","ref","Slide","direction","ForecastModal","day","open","setOpen","Dialog","TransitionComponent","keepMounted","onClose","DialogTitle","DialogContent","marginBottom","marginRight","temperature","detailedForecast","night","marginTop","DialogActions","Button","onClick","Forecast","data","useState","forecastModalOpen","setForecastModalOpen","activeForcast","setActiveForcast","overflowX","map","idx","key","Table","TableBody","i","TableRow","TableCell","fontSize","CtoF","d","Math","round","metersPerSecondToMph","m","kphToMph","kph","metersToMiles","parseIcon","iconUrl","replace","split","slice","percent","parseInt","sort","a","b","distanceM","Δφ","PI","Δλ","Q","sin","cos","atan2","sqrt","bearing","y","x","getCardinalDirection","heading","CurrentConditions","stationInfo","stationName","properties","name","trim","value","feelsLike","transform","windGust","CurrentDetails","distanceMi","distance","size","timestamp","fromNow","elevation","className","relativeHumidity","dewpoint","visibility","barometricPressure","extend","relativeTime","WeatherLine","axisBottom","axisLeft","top","right","bottom","left","xScale","type","precision","xFormat","yFormat","yScale","min","max","stacked","reverse","curve","axisTop","axisRight","tickValues","legendOffset","orient","tickSize","tickPadding","tickRotation","legendPosition","colors","scheme","lineWidth","enablePoints","enableArea","areaOpacity","useMesh","enableSlices","sliceTooltip","paddingLeft","paddingRight","backgroundColor","border","points","yFormatted","HourlyGraphs","times","minDay","startOf","add","range","diff","days","toDate","push","clone","userSelect","areaBaselineValue","legend","skyCover","probabilityOfPrecipitation","minMax","Sun","PartlyCloudy","MostlyCloudy","Cloudy","Windy","PartlyCloudyWindy","CloudyWindy","Snow","Rain","SunnyRain","Thunderstorm","SunThunderstorm","Blizzard","ForecastPage","undefined","currentConditions","forecast","hourlyForecast","setData","lastRefresh","setLastRefresh","fetchData","LNG","LAT","fetchLocationInfo","grid","station","Promise","fetchStationInfo","id","fetchCurrentConditions","fetchForecast","fetchHourlyForecast","all","geometry","coordinates","endTime","hourlyPrecip","values","filter","validTime","isBetween","hourlyClouds","hourlyTemp","hourlyFeelsLike","apparentTemperature","hourlyWind","hourlyWindGust","hourlyDewpoint","useEffect","document","addEventListener","sinceLastRefresh","maxWidth","position","CircularProgress","lng","lat","fetch","then","res","json","pointInfo","observationStations","features","forecastGridData","url","response","parsedIcons","icons","windChill","heatIndex","parsed","periods","temps","parsedIcon","balmyIcon","precip","length","isDaytime","hourly","Radar","setMap","valueOf","time","setTime","timeIntervals","useMemo","subtract","label","getTimeIntervals","loopState","setLoopState","loop","setLoop","radarPromises","interval","getRadarUrl","pauseLoop","clearInterval","getSource","updateImage","forceTime","bounds","bufferBounds","getBounds","southWest","northEast","params","dpi","transparent","bbox","join","bboxSR","imageSR","window","innerWidth","innerHeight","f","queryString","URLSearchParams","toString","innerMap","mapboxgl","Map","container","maxZoom","minZoom","zoom","center","on","addSource","addLayer","source","paint","setTimeout","resize","setPaintProperty","radarSource","radarUrl","currentInterval","forEach","setInterval","borderRadius","IconButton","getRadarLoop","Slider","marks","defaultValue","valueLabelDisplay","step","onChange","event","toArray","sw","ne","accessToken","Header","location","useLocation","AppBar","Toolbar","flexGrow","to","textDecoration","pathname","startIcon","theme","createMuiTheme","palette","primary","500","responsiveFontSizes","App","ThemeProvider","path","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"mFAAAA,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,iD,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,8C,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,sC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,+WCSrCC,EAAYC,YAAW,CACzBC,SAAU,CACNC,OAAQ,MACRC,MAAO,QACPC,OAAQ,QACRC,QAAS,eACTC,OAAQ,WAEZC,eAAgB,CACZL,OAAQ,MACRM,QAAS,MACTL,MAAO,QACPC,OAAQ,QACRC,QAAS,gBAEbI,kBAAmB,CACfD,QAAS,MACT,eAAgB,CACZE,cAAe,MAIZ,SAASC,EAAT,GAAoF,IAA7DC,EAA4D,EAA5DA,OAAWC,EAAiD,0BACxFC,EAAWC,YAAc,sBACzBC,EAAUjB,IAEVkB,EAAYH,EAAW,QAAU,aAEvC,OAAO,kBAACI,EAAA,EAAD,eAAMF,QAAS,CAClBG,KAAML,EAAWE,EAAQT,eAAiBS,EAAQf,WAC/CY,GACH,kBAACO,EAAA,EAAD,CAAaJ,QAAS,CAACG,KAAML,EAAWE,EAAQP,kBAAoB,KAChE,kBAACY,EAAA,EAAD,CAAYC,QAAQ,YAAYC,MAAO,CAACC,WAAY,YAChDC,IAAMb,EAAOc,WAAWC,OAAOV,IAGnC,yBAAKM,MAAO,CACRlB,QAASS,EAAW,QAAS,OAC7Bc,WAAY,SACZC,eAAgB,WAGhB,yBAAKN,MAAO,CAAClB,QAASS,EAAW,QAAU,iBACvC,yBAAKgB,IAAKlB,EAAOmB,KAAMR,MAAO,CAACnB,OAAQU,EAAW,OAAS,QAASkB,IAAI,MAG5E,yBAAKT,MAAO,CACRlB,QAASS,EAAW,QAAU,eAC9BmB,UAAW,SACXC,WAAYpB,EAAW,EAAI,OAC3BqB,WAAYrB,EAAW,MAAO,MAC9BJ,cAAeI,EAAW,EAAI,QAE9B,kBAACO,EAAA,EAAD,CAAYC,QAAQ,MAChB,0BAAMC,MAAO,CAACa,MAAO,YAAaxB,EAAOyB,SAD7C,OAC8D,MAC1D,0BAAMd,MAAO,CAACa,MAAO,YAAaxB,EAAO0B,SAF7C,OAE6D,0BAAMf,MAAO,CAACgB,WAAY,MAA1B,OAG3DzB,GAAY,kBAACO,EAAA,EAAD,CAAYC,QAAQ,SAC7BV,EAAO4B,UADE,IACU5B,EAAO6B,kBAKrC3B,GAAY,kBAACO,EAAA,EAAD,CAAYC,QAAQ,SAASV,EAAO8B,iB,0DC7DxDC,EAAaC,IAAMC,YAAW,SAChCC,EACAC,GAEA,OAAO,kBAACC,EAAA,EAAD,eAAOC,UAAU,KAAKF,IAAKA,GAASD,OAQhC,SAASI,EAAT,GAAkE,IAA1CC,EAAyC,EAAzCA,IAAKC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,QAC9C,OAAKF,EAGL,kBAACG,EAAA,EAAD,CACIF,KAAMA,EACNG,oBAAqBZ,EACrBa,aAAW,EACXC,QAAS,kBAAMJ,GAAQ,KAEvB,kBAACK,EAAA,EAAD,KAAcjC,IAAM0B,EAAIzB,WAAWC,OAAO,gBAC1C,kBAACgC,EAAA,EAAD,KACI,yBAAKpC,MAAO,CAACb,cAAe,SACxB,yBAAKa,MAAO,CAAClB,QAAS,OAAQuB,WAAY,SAAUgC,aAAc,SAC9D,yBAAK9B,IAAKqB,EAAIpB,KAAMR,MAAO,CAACnB,OAAQ,OAAQyD,YAAa,QAAS7B,IAAI,KACtE,kBAACX,EAAA,EAAD,CAAYC,QAAQ,MAChB,0BAAMC,MAAO,CAACa,MAAO,YAAae,EAAIW,aAD1C,UAIJ,kBAACzC,EAAA,EAAD,CAAYC,QAAQ,SACf6B,EAAIY,mBAIZZ,EAAIa,OAAS,6BACV,kBAAC3C,EAAA,EAAD,CAAYC,QAAQ,MAApB,aACA,yBAAKC,MAAO,CAAClB,QAAS,OAAQuB,WAAY,SAAUqC,UAAW,OAAQL,aAAc,SACjF,yBAAK9B,IAAKqB,EAAIa,MAAMjC,KAAMR,MAAO,CAACnB,OAAQ,OAAQyD,YAAa,QAAS7B,IAAI,KAC5E,kBAACX,EAAA,EAAD,CAAYC,QAAQ,MAChB,0BAAMC,MAAO,CAACa,MAAO,YAAae,EAAIa,MAAMF,aADhD,UAIJ,kBAACzC,EAAA,EAAD,CAAYC,QAAQ,SACf6B,EAAIa,MAAMD,oBAwBvB,kBAACG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMf,GAAQ,IAAQjB,MAAM,WAA7C,WAzDS,KCbN,SAASiC,EAAT,GAAgE,IAA7CC,EAA4C,EAA5CA,KACxBxD,EAAWC,YAAc,sBAD2C,EAExBwD,oBAAS,GAFe,mBAEnEC,EAFmE,KAEhDC,EAFgD,OAGhCF,qBAHgC,mBAGnEG,EAHmE,KAGpDC,EAHoD,KAK1E,OAAKL,EAEE,oCACH,yBAAK/C,MAAO,CAACqD,UAAW,WACpB,yBAAKrD,MAAO,CACVpB,MAAOW,EAAW,QAAU,SAC5BT,QAAS,OACT8B,WAAY,OACZzB,cAAe,SAEZ4D,EAAKO,KAAI,SAAC1B,EAAK2B,GACd,OAAO,kBAACnE,EAAD,CACLoE,IAAKD,EACLlE,OAAQuC,EACRiB,QAAS,WACPK,GAAqB,GACrBE,EAAiBxB,YAK7BrC,GAAY,kBAACkE,EAAA,EAAD,KACV,kBAACC,EAAA,EAAD,KACCX,EAAKO,KAAI,SAAC1B,EAAK+B,GAChB,OAAO,kBAACC,EAAA,EAAD,CAAUJ,IAAKG,GACjB,kBAACE,EAAA,EAAD,CAAW7D,MAAO,CAACf,QAASM,EAAW,OAAS,SAC3C,kBAACO,EAAA,EAAD,CAAYC,QAAQ,SAASG,IAAM0B,EAAIzB,WAAWC,OAAO,OAAzD,IAAkEF,IAAM0B,EAAIzB,WAAWC,OAAO,SAElG,kBAACyD,EAAA,EAAD,CAAW7D,MAAO,CAACf,QAASM,EAAW,OAAS,SAC5C,kBAACO,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAO,CAAC8D,SAAU,OAAQ9C,WAAY,SAC9D,0BAAMhB,MAAO,CAACa,MAAO,YAAae,EAAId,SAD1C,OAC2D,MACvD,0BAAMd,MAAO,CAACa,MAAO,YAAae,EAAIb,SAF1C,OAGI,0BAAMf,MAAO,CAACgB,WAAY,MAA1B,OAGR,kBAAC6C,EAAA,EAAD,CAAW7D,MAAO,CAACf,QAASM,EAAW,OAAS,SAC5C,kBAACO,EAAA,EAAD,CAAYC,QAAQ,SAAS6B,EAAIX,UAAjC,IAA6CW,EAAIV,iBAEnD3B,GAAY,kBAACsE,EAAA,EAAD,CAAW7D,MAAO,CAACpB,MAAO,MAAO8B,UAAW,OAAQzB,QAASM,EAAW,OAAS,SAC3F,kBAACO,EAAA,EAAD,CAAYC,QAAQ,SAAS6B,EAAIY,yBAM/C,kBAACb,EAAD,CAAeC,IAAKuB,EAAetB,KAAMoB,EAAmBnB,QAASoB,KA7CvD,K,sBChBf,SAASa,EAAKC,GACjB,OAAOC,KAAKC,MAAW,EAAJF,EAAM,EAAK,IAG3B,SAASG,EAAqBC,GACjC,OAAOH,KAAKC,MAAU,QAAJE,GAGf,SAASC,EAASC,GACrB,OAAOL,KAAKC,MAAY,IAANI,GAGf,SAASC,EAAcH,GAC1B,OAAOH,KAAKC,MAAU,YAAJE,GAOf,SAASI,EAAUC,GACtB,OAAOA,EACFC,QAAQ,iCAAkC,IAC1CC,MAAM,KAAK,GACXA,MAAM,KACNC,MAAM,GACNtB,KAAI,SAAAU,GAAC,OAAIA,EAAEW,MAAM,QACjBrB,KAAI,SAAAU,GAAO,MAAO,CAACxD,KAAMwD,EAAE,GAAIa,QAASC,SAASd,EAAE,QACnDe,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEJ,QAAUG,EAAEH,WAI/B,SAASK,EAAWF,EAAqBC,GAC5C,IAAME,GAAMF,EAAE,GAAKD,EAAE,IAAMf,KAAKmB,GAAK,IAC/BC,GAAMJ,EAAE,GAAKD,EAAE,IAAMf,KAAKmB,GAAK,IAE/BE,EAAIrB,KAAKsB,IAAIJ,EAAG,GAAKlB,KAAKsB,IAAIJ,EAAG,GAAKlB,KAAKuB,IAAKR,EAAE,GAAKf,KAAKmB,GAAK,KACnEnB,KAAKuB,IAAKP,EAAE,GAAKhB,KAAKmB,GAAK,KAAUnB,KAAKsB,IAAIF,EAAG,GAAKpB,KAAKsB,IAAIF,EAAG,GAEtE,OAAiB,EAAIpB,KAAKwB,MAAMxB,KAAKyB,KAAKJ,GAAIrB,KAAKyB,KAAK,EAAEJ,IAAnD,OAGJ,SAASK,EAAQX,EAAqBC,GACzC,IAAMW,EAAI3B,KAAKsB,IAAIN,EAAE,GAAGD,EAAE,IAAMf,KAAKuB,IAAIP,EAAE,IACrCY,EAAI5B,KAAKuB,IAAIR,EAAE,IAAMf,KAAKsB,IAAIN,EAAE,IAClChB,KAAKsB,IAAIP,EAAE,IAAMf,KAAKuB,IAAIP,EAAE,IAAMhB,KAAKuB,IAAIP,EAAE,GAAKD,EAAE,IAExD,OAA6B,IAApBf,KAAKwB,MAAMG,EAAGC,GAAY5B,KAAKmB,GAAK,KAAO,IChDvC,SAASU,EAAqBC,GAG3C,QAAO,GACL,KAAMA,GAAW,QAAUA,GAAW,MACpC,MAAO,IACT,KAAKA,GAAW,OAASA,GAAW,MAClC,MAAO,MACT,KAAKA,GAAW,OAASA,GAAW,MAClC,MAAO,KACT,KAAKA,GAAW,OAASA,GAAW,MAClC,MAAO,MACT,KAAKA,GAAW,OAASA,GAAW,OAClC,MAAO,IACT,KAAKA,GAAW,QAAUA,GAAW,OACnC,MAAO,MACT,KAAKA,GAAW,QAAUA,GAAW,OACnC,MAAO,KACT,KAAKA,GAAW,QAAUA,GAAW,OACnC,MAAO,MACT,KAAKA,GAAW,QAAUA,GAAW,OACnC,MAAO,IACT,KAAKA,GAAW,QAAUA,GAAW,OACnC,MAAO,MACT,KAAKA,GAAW,QAAUA,GAAW,OACnC,MAAO,KACT,KAAKA,GAAW,QAAUA,GAAW,OACnC,MAAO,MACT,KAAKA,GAAW,QAAUA,GAAW,OACnC,MAAO,IACT,KAAKA,GAAW,QAAUA,GAAW,OACnC,MAAO,MACT,KAAKA,GAAW,QAAUA,GAAW,OACnC,MAAO,KACT,KAAKA,GAAW,QAAUA,GAAW,OACnC,MAAO,MACT,QACE,MAAO,O,sBCvBA,SAASC,EAAT,GAEZ,IADEjD,EACH,EADGA,KAAMkD,EACT,EADSA,YAED1G,EAAWC,YAAc,sBAE/B,IAAKuD,IAASkD,EAAa,OAAO,KAElC,IAAIC,EAAcD,EAAYE,WAAWC,KAAKzB,MAAM,KAOpD,OALIuB,EADAA,EAAY,GACEA,EAAY,GAAGG,OAEfJ,EAAYE,WAAWC,KAGlC,6BACH,yBAAKpG,MAAO,CAACU,UAAW,SACpB,kBAACZ,EAAA,EAAD,CAAYC,QAAQ,MACfmG,IAGb,yBAAKlG,MAAO,CACRlB,QAAS,OACTuB,WAAY,SACZC,eAAgBf,EAAW,eAAiB,gBAC5CN,QAASM,EAAW,EAAI,SAExB,6BACI,yBACIgB,IAAKwC,EAAKvC,KACVR,MAAO,CAACpB,MAAOW,EAAW,QAAS,SACnCkB,IAAI,MAGZ,6BACI,kBAACX,EAAA,EAAD,CAAYC,QAASR,EAAW,KAAM,KAAMS,MAAO,CAACC,WAAY,YAC3D8D,EAAKhB,EAAKR,YAAY+D,OAD3B,SAGCvD,EAAKwD,WAAa,kBAACzG,EAAA,EAAD,CAAYC,QAAQ,MAApB,cACHgE,EAAKhB,EAAKwD,WADP,UAGjBhH,GAAY,6BACV,kBAACO,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAO,CAAClB,QAAS,iBACtC,kBAAC,IAAD,CAAgBkB,MAAO,CACnBwG,UAAU,UAAD,OAAYzD,EAAK7B,cAAcoF,MAAQ,IAAvC,QACThE,YAAa,SAEhB+B,EAAStB,EAAK9B,UAAUqF,OACxBvD,EAAK0D,SAASH,MACf,MAAQjC,EAAStB,EAAK0D,SAASH,OAAS,IAE5C,kBAACxG,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAO,CAAClB,QAAS,eAAgB6B,WAAY,QAAtE,OACA,kBAACb,EAAA,EAAD,CAAYC,QAAQ,KAAMC,MAAO,CAAClB,QAAS,eAAgB6B,WAAY,QAClEmF,EAAqB/C,EAAK7B,cAAcoF,WAKnD/G,GAAY,kBAACmH,EAAD,CAAgB3D,KAAMA,EAAMkD,YAAaA,KAEtD1G,GAAY,kBAACmH,EAAD,CAAgB3D,KAAMA,EAAMkD,YAAaA,KAI9D,SAASS,EAAT,GAA6E,IAApD3D,EAAmD,EAAnDA,KAAMkD,EAA6C,EAA7CA,YAC3B,IAAKlD,EAAM,OAAO,KAElB,IF/DyBqB,EE+DnBuC,EAAapC,EAAc0B,EAAYE,WAAWS,UAExD,OAAO,6BACH,kBAACnD,EAAA,EAAD,CAAOoD,KAAK,SACR,kBAACnD,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACA,kBAAC/D,EAAA,EAAD,CAAYC,QAAQ,aAApB,iBAEA,kBAAC8D,EAAA,EAAD,KACA,kBAAC/D,EAAA,EAAD,CAAYC,QAAQ,SAASG,IAAM6C,EAAK+D,WAAWC,aAIvD,kBAACnD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACA,kBAAC/D,EAAA,EAAD,CAAYC,QAAQ,aAApB,cAEA,kBAAC8D,EAAA,EAAD,KACA,kBAAC/D,EAAA,EAAD,CAAYC,QAAQ,UFlFXqE,EEmFS6B,EAAYE,WAAWa,UAAUV,MFlF5DrC,KAAKC,MAAU,QAAJE,IEiFF,SAMJ,kBAACR,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACA,kBAAC/D,EAAA,EAAD,CAAYC,QAAQ,aAApB,aAEA,kBAAC8D,EAAA,EAAD,KACA,kBAAC/D,EAAA,EAAD,CAAYC,QAAQ,SACf4G,EADL,OACqBb,EAAqBG,EAAYE,WAAWR,YAKrE,kBAAC/B,EAAA,EAAD,CAAUqD,UAAU,eAChB,kBAACpD,EAAA,EAAD,KACI,kBAAC/D,EAAA,EAAD,CAAYC,QAAQ,aAApB,SAEJ,kBAAC8D,EAAA,EAAD,KACI,kBAAC/D,EAAA,EAAD,CAAYC,QAAQ,SACfoE,EAAqBpB,EAAK9B,UAAUqF,OADzC,QACsDR,EAAqB/C,EAAK7B,cAAcoF,UAIrGvD,EAAK0D,SAASH,OAAS,kBAAC1C,EAAA,EAAD,CAAUqD,UAAU,eACxC,kBAACpD,EAAA,EAAD,KACI,kBAAC/D,EAAA,EAAD,CAAYC,QAAQ,aAApB,YAEJ,kBAAC8D,EAAA,EAAD,KACI,kBAAC/D,EAAA,EAAD,CAAYC,QAAQ,SACfoE,EAAqBpB,EAAK0D,SAASH,OADxC,UAMZ,kBAAC1C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACA,kBAAC/D,EAAA,EAAD,CAAYC,QAAQ,aAApB,aAEA,kBAAC8D,EAAA,EAAD,KACA,kBAAC/D,EAAA,EAAD,CAAYC,QAAQ,SAChBkE,KAAKC,MAAMnB,EAAKmE,iBAAiBZ,OADrC,OAMJ,kBAAC1C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACA,kBAAC/D,EAAA,EAAD,CAAYC,QAAQ,aAApB,cAEA,kBAAC8D,EAAA,EAAD,KACA,kBAAC/D,EAAA,EAAD,CAAYC,QAAQ,SAChBgE,EAAKhB,EAAKoE,SAASb,OADvB,WAMJ,kBAAC1C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACA,kBAAC/D,EAAA,EAAD,CAAYC,QAAQ,aAApB,cAEA,kBAAC8D,EAAA,EAAD,KACA,kBAAC/D,EAAA,EAAD,CAAYC,QAAQ,SAChBwE,EAAcxB,EAAKqE,WAAWd,OADlC,SAMJ,kBAAC1C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACA,kBAAC/D,EAAA,EAAD,CAAYC,QAAQ,aAApB,aAEA,kBAAC8D,EAAA,EAAD,KACA,kBAAC/D,EAAA,EAAD,CAAYC,QAAQ,SAChBkE,KAAKC,MAAsC,IAAhCnB,EAAKsE,mBAAmBf,OADvC,YAnKhBpG,IAAMoH,OAAOC,K,mCCFE,SAASC,GAAT,GAAqE,IAA/CC,EAA8C,EAA9CA,WAAYC,EAAkC,EAAlCA,SAAanG,EAAqB,yCACzEhC,EAAWC,YAAc,sBAE/B,OAAO,kBAAC,KAAD,eACHb,OAAQ,CAAEgJ,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAChDC,OAAQ,CACJC,KAAM,OACN5H,OAAQ,SACR6H,UAAW,OAEfC,QAAQ,mBACRC,QAAS,SAAC7B,GAAD,gBAAmBA,EAAnB,UACT8B,OAAQ,CAAEJ,KAAM,SAAUK,IAAK,OAAQC,IAAK,OAAQC,SAAS,EAAMC,SAAS,GAC5EC,MAAM,YACNC,QAAS,KACTC,UAAW,KACXlB,WAAU,aACNrH,OAAQ,WACRwI,WAAY,YACZC,cAAe,GACfC,OAAQ,SACRC,SAAU,EACVC,YAAa,EACbC,aAAc1J,GAAY,GAAK,GAC5BkI,GAEPC,SAAQ,aACJoB,OAAQ,OACRC,SAAU,EACVH,WAAY,EACZI,YAAa,EACbC,aAAc,EACdJ,cAAe,GACfK,eAAgB,UACbxB,GAEPyB,OAAQ,CAAEC,OAAQ,QAClBC,UAAW,EACXC,cAAc,EACdC,YAAY,EACZC,YAAa,GACbC,SAAS,EACTC,aAAa,IACbC,aAAc,SAAC/E,GACX,OAAO,yBAAK5E,MAAO,CACfY,WAAY,MACZzB,cAAe,MACfyK,YAAa,MACbC,aAAc,MACdC,gBAAiB,OACjBC,OAAQ,mBAER,kBAACjK,EAAA,EAAD,CAAYC,QAAQ,aACnB6E,EAAMA,MAAMoF,OAAO,GAAGjH,KAAKkH,WAD5B,MAC2C/J,IAAM0E,EAAMA,MAAMoF,OAAO,GAAGjH,KAAK8C,GAAGzF,OAAO,UAI1FmB,IC7DG,SAAS2I,GAAT,GAAwD,IAAjCnH,EAAgC,EAAhCA,KAClC,IAAKA,EAAM,OAAO,KAYlB,IAVA,IAGMoH,EAAQpH,EAAKR,YAAYQ,KAAKO,KAAI,SAACU,GAAD,OAAY9D,IAAM8D,EAAE6B,MACtDuE,EAASlK,IAAMmI,IAAN,MAAAnI,IAAK,YAAQiK,IAAOE,QAAQ,OAAOC,IAAI,EAAG,OAGnDC,EAFSrK,IAAMoI,IAAN,MAAApI,IAAK,YAAQiK,IAAOE,QAAQ,OAEtBG,KAAKJ,EAAQ,QAC5BK,EAAO,CAACL,EAAOM,UAEZ/G,EAAI,EAAGA,GAAK4G,EAAO5G,IACxB8G,EAAKE,KAAKP,EAAOQ,QAAQN,IAAI3G,EAAG,QAAQ+G,UAG5C,OAAO,6BACH,yBAAK1K,MAAO,CAACnB,OAfF,QAeUgM,WAAY,SAC7B,kBAACrD,GAAD,CACIzE,KAAM,CAACA,EAAKR,aACZuI,kBAAmB7G,KAAKoE,IAAL,MAAApE,KAAI,YAAQlB,EAAKR,YAAYQ,KAAKO,KAAI,SAACU,GAAD,OAAYA,EAAEsC,WAAU,GACjF8B,OAAQ,CACJJ,KAAM,SACNK,IAAKpE,KAAKoE,IAAL,MAAApE,KAAI,YAAQlB,EAAKR,YAAYQ,KAAKO,KAAI,SAACU,GAAD,OAAYA,EAAEsC,WAAU,GACnEgC,IAAKrE,KAAKqE,IAAL,MAAArE,KAAI,YAAQlB,EAAKR,YAAYQ,KAAKO,KAAI,SAACU,GAAD,OAAYA,EAAEsC,WAAU,IAEvE6B,QAAS,SAAC7B,GAAD,gBAAmBA,EAAnB,UACToB,SAAU,CACNqD,OAAQ,YACR3K,OAAQ,SAACkG,GAAD,gBAAcA,EAAd,UAEZmB,WAAY,CAACmB,WAAY6B,GACzBtB,OAAQ,aAIhB,yBAAKnJ,MAAO,CAACnB,OAlCF,QAkCUgM,WAAY,SAC7B,kBAACrD,GAAD,CACIzE,KAAM,CAACA,EAAKiI,UACZ7C,QAAS,SAAC7B,GAAD,gBAAmBA,EAAnB,MACT8B,OAAQ,CACJJ,KAAM,SACNK,IAAK,EACLC,IAAK,KAETZ,SAAU,CACNqD,OAAQ,cACRnC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,KAC5BxI,OAAQ,SAACkG,GAAD,gBAAcA,EAAd,OAEZmB,WAAY,CAACmB,WAAY6B,GACzBtB,OAAQ,aAIhB,yBAAKnJ,MAAO,CAACnB,OArDF,QAqDUgM,WAAY,SAC7B,kBAACrD,GAAD,CACIzE,KAAM,CAACA,EAAKkI,4BACZ9C,QAAS,SAAC7B,GAAD,gBAAmBA,EAAnB,MACT8B,OAAQ,CACJJ,KAAM,SACNK,IAAK,EACLC,IAAK,KAETZ,SAAU,CACNqD,OAAQ,mBACRnC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,KAC5BxI,OAAQ,SAACkG,GAAD,gBAAcA,EAAd,OAEZmB,WAAY,CAACmB,WAAY6B,GACzBtB,OAAQ,aAIhB,yBAAKnJ,MAAO,CAACnB,OAxEF,QAwEUgM,WAAY,SAC7B,kBAACrD,GAAD,CACIzE,KAAM,CAACA,EAAK9B,WACZkH,QAAS,SAAC7B,GAAD,gBAAmBA,EAAnB,SACT8B,OAAQ,CACJJ,KAAM,SACNK,IAAK,EACLC,IAAKrE,KAAKqE,IAAL,MAAArE,KAAI,YAAQlB,EAAK9B,UAAU8B,KAAKO,KAAI,SAACU,GAAD,OAAYA,EAAEsC,WAAU,GAErEoB,SAAU,CAACqD,OAAQ,oBACnBtD,WAAY,CAACmB,WAAY6B,GACzBtB,OAAQ,UACRI,YAAY,MAzF5BrJ,IAAMoH,OAAO4D,M,qRCWE,IACX,IAAO,CACH,YAAe,aACf,KAAQC,MAEZ,IAAO,CACH,YAAe,eACf,KAAQC,MAEZ,IAAO,CACH,YAAe,gBACf,KAAQA,MAEZ,IAAO,CACH,YAAe,gBACf,KAAQC,MAEZ,IAAO,CACH,YAAe,WACf,KAAQC,MAEZ,SAAY,CACR,YAAe,uBACf,KAAQC,MAEZ,SAAY,CACR,YAAe,yBACf,KAAQC,MAEZ,SAAY,CACR,YAAe,0BACf,KAAQA,MAEZ,SAAY,CACR,YAAe,0BACf,KAAQC,MAEZ,SAAY,CACR,YAAe,qBACf,KAAQA,MAEZ,KAAQ,CACJ,YAAe,OACf,KAAQC,MAEZ,UAAa,CACT,YAAe,aAEnB,WAAc,CACV,YAAe,cAEnB,WAAc,CACV,YAAe,cAEnB,KAAQ,CACJ,YAAe,iBAEnB,UAAa,CACT,YAAe,sBAEnB,UAAa,CACT,YAAe,sBAEnB,MAAS,CACL,YAAe,SAEnB,KAAQ,CACJ,YAAe,OACf,KAAQC,MAEZ,aAAgB,CACZ,YAAe,kCACf,KAAQA,MAEZ,gBAAmB,CACf,YAAe,iCACf,KAAQC,MAEZ,KAAQ,CACJ,YAAe,kCACf,KAAQC,MAEZ,SAAY,CACR,YAAe,oCACf,KAAQC,MAEZ,QAAW,CACP,YAAe,iCACf,KAAQA,MAEZ,QAAW,CACP,YAAe,WAEnB,UAAa,CACT,YAAe,wBAEnB,eAAkB,CACd,YAAe,6BAEnB,KAAQ,CACJ,YAAe,QAEnB,MAAS,CACL,YAAe,SAEnB,KAAQ,CACJ,YAAe,QAEnB,IAAO,CACH,YAAe,OAEnB,KAAQ,CACJ,YAAe,QAEnB,SAAY,CACR,YAAe,WACf,KAAQC,MAEZ,IAAO,CACH,YAAe,a,UC1HR,SAASC,KAAgB,IAAD,EACXhJ,mBAAc,CAClCiD,iBAAagG,EACbC,uBAAmBD,EACnBE,cAAUF,EACVG,oBAAgBH,IALe,mBAC5BlJ,EAD4B,KACtBsJ,EADsB,OAOGrJ,wBAAkCiJ,GAPrC,mBAO5BK,EAP4B,KAOfC,EAPe,cASpBC,IAToB,2EASnC,gDAAAxH,EAAA,6DACUyH,GAAO,QACPC,EAAM,QAFhB,SAGkCC,GAAkBF,EAAKC,GAHzD,uBAGWE,EAHX,EAGWA,KAAMC,EAHjB,EAGiBA,QAHjB,KAK2EC,QAL3E,UAMcC,GAAiBF,EAAQG,IANvC,qCAOcC,GAAuBJ,EAAQG,GAAK,wBAPlD,qCAQcE,GAAcN,EAAO,aARnC,qCAScO,GAAoBP,GATlC,qEAKmFQ,IALnF,oDAKSnH,EALT,KAKsBiG,EALtB,KAKyCC,EALzC,KAKmDC,EALnD,KAYInG,EAAYE,WAAWS,SAAW1B,EAChC,CAACuH,EAAKC,GACJzG,EAAYoH,SAASC,aAGzBrH,EAAYE,WAAWR,QAAUA,EAC/B,CAAC8G,EAAKC,GACJzG,EAAYoH,SAASC,aAGzBnB,EAAWA,EAAS7I,KAAI,SAAA1B,GACtB,IAAMzB,EAAYD,IAAM0B,EAAIzB,WAAWkK,QAAQ,OACzCkD,EAAUrN,IAAMC,GAAWmK,IAAI,GAAI,SAEzC,OAAO,eACF1I,EADL,CAEE4L,aAAcpB,EAAenB,2BAA2BwC,OAAOC,QAAO,SAAC1J,GAAD,OAClE9D,IAAM8D,EAAE2J,UAAUhJ,MAAM,KAAK,IAAIiJ,UAAUzN,EAAWoN,MAE1DM,aAAczB,EAAepB,SAASyC,OAAOC,QAAO,SAAC1J,GAAD,OAChD9D,IAAM8D,EAAE2J,UAAUhJ,MAAM,KAAK,IAAIiJ,UAAUzN,EAAWoN,MAE1DO,WAAY1B,EAAe7J,YAAYkL,OAAOC,QAAO,SAAC1J,GAAD,OACjD9D,IAAM8D,EAAE2J,UAAUhJ,MAAM,KAAK,IAAIiJ,UAAUzN,EAAWoN,MAE1DQ,gBAAiB3B,EAAe4B,oBAAoBP,OAAOC,QAAO,SAAC1J,GAAD,OAC9D9D,IAAM8D,EAAE2J,UAAUhJ,MAAM,KAAK,IAAIiJ,UAAUzN,EAAWoN,MAE1DU,WAAY7B,EAAenL,UAAUwM,OAAOC,QAAO,SAAC1J,GAAD,OAC/C9D,IAAM8D,EAAE2J,UAAUhJ,MAAM,KAAK,IAAIiJ,UAAUzN,EAAWoN,MAE1DW,eAAgB9B,EAAe3F,SAASgH,OAAOC,QAAO,SAAC1J,GAAD,OAClD9D,IAAM8D,EAAE2J,UAAUhJ,MAAM,KAAK,IAAIiJ,UAAUzN,EAAWoN,MAE1DY,eAAgB/B,EAAejF,SAASsG,OAAOC,QAAO,SAAC1J,GAAD,OAClD9D,IAAM8D,EAAE2J,UAAUhJ,MAAM,KAAK,IAAIiJ,UAAUzN,EAAWoN,WAK/DlB,EAAQ,CAACpG,cAAaiG,oBAAmBC,WAAUC,mBACnDG,EAAerM,OArDlB,6CATmC,sBA+EnC,OAdAkO,qBAAU,WACN5B,IAGA6B,SAASC,iBAAiB,oBAAoB,WAC1C,IAAMC,EAAmBjC,GAAepM,MAAQsK,KAAK8B,GAAe,IAEhEiC,GAAoBA,GAAoB,GACxC/B,SAIT,IAEI,yBAAKvF,UAAU,MAAMjH,MAAO,CAACwO,SAAU,SAAU7P,OAAQ,SAAUM,QAAS,UAC/E8D,EAAKkD,aAAe,yBACpBjG,MAAO,CAACyO,SAAU,WAAY7P,MAAO,oBAAqBC,OAAQ,qBAAsBC,QAAS,OAAQuB,WAAY,SAAUC,eAAgB,WAE/I,kBAACoO,GAAA,EAAD,OAED3L,EAAKkD,aAAe,oCACnB,kBAACD,EAAD,CAAmBjD,KAAMA,EAAKmJ,kBAAmBjG,YAAalD,EAAKkD,cACnE,kBAACnD,EAAD,CAAUC,KAAMA,EAAKoJ,WACrB,kBAACjC,GAAD,CAAcnH,KAAMA,EAAKqJ,mB,SAKlBO,G,mFAAf,WAAiCgC,EAAaC,GAA9C,iBAAA5J,EAAA,sEAC0B6J,MAAM,kCAAD,OAAmCD,EAAnC,YAA0CD,IACpEG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAFrB,cACQC,EADR,gBAIwBJ,MAAMI,EAAU9I,WAAW+I,qBAC9CJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GAAI,OAAIA,EAAKG,SAAS,MANhC,cAIQtC,EAJR,yBAQS,CACLD,KAAMqC,EAAU9I,WAAWiJ,iBAC3BvC,YAVJ,4C,+BAceE,G,iFAAf,WAAgCsC,GAAhC,eAAArK,EAAA,sEACyB6J,MAAM,yCAC1BC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAFrB,cACQM,EADR,yBAIWA,GAJX,4C,+BAOerC,G,iFAAf,WAAsCoC,GAAtC,mBAAArK,EAAA,sEAC2B6J,MAAM,6DAC1BC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAFvB,cACUM,EADV,QAIUC,EAAc/K,EAAU8K,EAASnJ,WAAW3F,SAEhD8O,EAASnJ,WAAW3F,KAAQgP,GAAD,UAAeD,EAAY,UAA3B,aAAe,EAAgB/O,MAAMA,MAGlE8O,EAASnJ,WAAT,UACImJ,EAASnJ,WAAWsJ,UAAUnJ,OAASgJ,EAASnJ,WAAWuJ,UAAUpJ,MAV7E,kBAYWgJ,EAASnJ,YAZpB,4C,+BAee+G,G,iFAAf,WAA6BmC,GAA7B,mBAAArK,EAAA,sEAC2B6J,MAAMQ,GAC1BP,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAFvB,cACUM,EADV,OAIUK,EAASL,EAASnJ,WAAWyJ,QAChCtM,KAAI,SAACjE,EAAwBkE,GAC5B,IAAMsM,EAAK,CACTxQ,EAAOkD,aADE,mBAEL+M,EAASnJ,WAAWyJ,QAAQrM,GAAO,CAAC+L,EAASnJ,WAAWyJ,QAAQrM,GAAKhB,aAAe,IAF/E,YAGL+M,EAASnJ,WAAWyJ,QAAQrM,EAAM,GAAK,CAAC+L,EAASnJ,WAAWyJ,QAAQrM,EAAM,GAAGhB,aAAe,KAG5FuN,EAAatL,EAAUnF,EAAOmB,MAAM,GACpCuP,EAAaP,GAAcM,EAAWtP,MAE5C,OAAO,eACFnB,EADL,CAEE0B,QAASkD,KAAKoE,IAAL,MAAApE,KAAI,YAAQ4L,IACrB/O,QAASmD,KAAKqE,IAAL,MAAArE,KAAI,YAAQ4L,IACrBG,OAAQF,EAAWjL,QACnBrE,KAAMuP,EAAUvP,MAAQnB,EAAOmB,UAI9BiK,EAAOkF,EAAOrM,KAAI,SAAC1B,GACtB,IAAMa,EAAQkN,EAAOjC,QACnB,SAACrO,GACC,OAAIA,EAAO+G,OAASxE,EAAIwE,KAAO,UACd,UAAbxE,EAAIwE,MAAoC,YAAhB/G,EAAO+G,OADa/G,KAMpD,OAAO,eACFuC,EADL,CAEEa,MAAOA,EAAMwN,OAASxN,EAAM,QAAKwJ,EACjC9K,cAAeS,EAAIT,cAAcwD,MAAM,UAAU,QAGlD+I,QAAO,SAACrO,GAAD,OAA4BA,EAAO6Q,aAvCnD,kBAyCWzF,GAzCX,4C,+BA6Ce0C,G,iFAAf,WAAmCkC,GAAnC,eAAArK,EAAA,sEACyB6J,MAAMQ,GACtBP,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAG,OAAIA,EAAI5I,cAHzB,cACUgK,EADV,QAMWlP,UAAU8B,KAAOoN,EAAOlP,UAAUwM,OAAOnK,KAAI,SAACU,GACjD,OAAO,eACAA,EADP,CAEI6B,EAAG3F,IAAM8D,EAAE2J,UAAUhJ,MAAM,KAAK,IAAI+F,SACpC9E,EAAG3B,KAAKC,MAAgB,QAAVF,EAAEsC,YAKxB6J,EAAO5N,YAAYQ,KAAOoN,EAAO5N,YAAYkL,OAAOnK,KAAI,SAACU,GACrD,OAAO,eACAA,EADP,CAEI6B,EAAG3F,IAAM8D,EAAE2J,UAAUhJ,MAAM,KAAK,IAAI+F,SACpC9E,EAAG7B,EAAKC,EAAEsC,OACVA,MAAOvC,EAAKC,EAAEsC,YAItB6J,EAAOnF,SAASjI,KAAOoN,EAAOnF,SAASyC,OAAOnK,KAAI,SAACU,GAC/C,OAAO,eACAA,EADP,CAEI6B,EAAG3F,IAAM8D,EAAE2J,UAAUhJ,MAAM,KAAK,IAAI+F,SACpC9E,EAAG5B,EAAEsC,WAIb6J,EAAOlF,2BAA2BlI,KAAOoN,EAAOlF,2BAA2BwC,OAAOnK,KAAI,SAACU,GACnF,OAAO,eACAA,EADP,CAEI6B,EAAG3F,IAAM8D,EAAE2J,UAAUhJ,MAAM,KAAK,IAAI+F,SACpC9E,EAAG5B,EAAEsC,WAKb6J,EAAOlP,UAAP,GAAyB,YACzBkP,EAAOnF,SAAP,GAAwB,WACxBmF,EAAO5N,YAAP,GAA2B,cAC3B4N,EAAOlF,2BAAP,GAA0C,6BA5C9C,kBA8CWkF,GA9CX,6C,sBAhLAjQ,IAAMoH,OAAOsG,K,uFCEE,SAASwC,GAAT,GAAwD,IAAxCzB,EAAuC,EAAvCA,IAAKC,EAAkC,EAAlCA,IAAkC,EAC5C5L,qBAD4C,mBAC3DM,EAD2D,KACtD+M,EADsD,OAE9CrN,mBAAS9C,MAAQoQ,WAA9BnQ,EAF2D,sBAG1C6C,mBAAS7C,GAHiC,mBAG3DoQ,EAH2D,KAGrDC,EAHqD,KAI5DC,EAAgBC,mBAAQ,kBAkQlC,SAA0BvQ,GACtB,MAAO,CACH,CACImG,MAAOpG,IAAMC,GAAWwQ,SAAS,EAAG,SAASL,UAC7CM,MAAO1Q,IAAMC,GAAWwQ,SAAS,EAAG,SAASvQ,OAAO,SAExD,CACIkG,MAAOpG,IAAMC,GAAWwQ,SAAS,IAAK,SAASL,WAEnD,CACIhK,MAAOpG,IAAMC,GAAWwQ,SAAS,KAAM,SAASL,WAEpD,CACIhK,MAAOpG,IAAMC,GAAWwQ,SAAS,EAAG,SAASL,UAC7CM,MAAO1Q,IAAMC,GAAWwQ,SAAS,EAAG,SAASvQ,OAAO,SAExD,CACIkG,MAAOpG,IAAMC,GAAWwQ,SAAS,IAAK,SAASL,WAEnD,CACIhK,MAAOpG,IAAMC,GAAWwQ,SAAS,KAAM,SAASL,WAEpD,CACIhK,MAAOpG,IAAMC,GAAWwQ,SAAS,EAAG,SAASL,UAC7CM,MAAO1Q,IAAMC,GAAWwQ,SAAS,EAAG,SAASvQ,OAAO,SAExD,CACIkG,MAAOpG,IAAMC,GAAWwQ,SAAS,IAAK,SAASL,WAEnD,CACIhK,MAAOpG,IAAMC,GAAWwQ,SAAS,KAAM,SAASL,WAEpD,CACIhK,MAAOpG,IAAMC,GAAWwQ,SAAS,EAAG,SAASL,UAC7CM,MAAO1Q,IAAMC,GAAWwQ,SAAS,EAAG,SAASvQ,OAAO,SAExD,CACIkG,MAAOpG,IAAMC,GAAWwQ,SAAS,GAAK,SAASL,WAEnD,CACIhK,MAAOpG,IAAMC,GAAWwQ,SAAS,IAAM,SAASL,WAEpD,CACIhK,MAAOnG,EACPyQ,MAAO1Q,IAAMC,GAAWC,OAAO,UA9SHyQ,CAAiB1Q,KAAY,CAACA,IAJA,EAKhC6C,wBAAwCiJ,GALR,mBAK3D6E,EAL2D,KAKhDC,EALgD,OAM1C/N,wBAAqCiJ,GANK,mBAM3D+E,EAN2D,KAMrDC,EANqD,KAO5D1R,EAAWC,YAAc,sBAPmC,4CASlE,4BAAAwF,EAAA,yDACS1B,EADT,wDAEIyN,EAAa,WAEPG,EAAgBT,EAAcnN,KAAI,SAAA6N,GAAQ,OAAItC,MAAMuC,EAAY9N,EAAK6N,EAAS7K,WAJxF,SAMUwG,QAAQM,IAAI8D,GANtB,OAOIH,EAAa,WAPjB,4CATkE,sBAqKlE,SAASM,IACA/N,GAAQ0N,IACbM,cAAcN,GACdC,OAAQhF,GACP3I,EAAIiO,UAAU,SACNC,YAAY,CAAEnC,IAAK+B,EAAY9N,MAG5C,SAAS8N,EAAY9N,EAAmBmO,GACpC,IAAMC,EAASC,GAAarO,EAAIsO,aAE1BC,EAAY,CAACH,EAAO,GAAIA,EAAO,IAC/BI,EAAY,CAACJ,EAAO,GAAIA,EAAO,IAE/BK,EAAS,CACXC,IAAK,KACLC,YAAa,OACb7R,OAAQ,QAERmQ,KAAe,UAATkB,GAAgClB,GACtC2B,KAAK,GAAD,OAAKL,EAAUM,KAAK,KAApB,YAA4BL,EAAUK,KAAK,MAC/CC,OAAQ,OACRC,QAAS,OACTxL,KAAK,GAAD,OAAKyL,OAAOC,WAAZ,YAA0BD,OAAOE,aACrCC,EAAG,SAGDC,EAAc,IAAIC,gBAAgBZ,GAAQa,WAChD,MAAM,kSAAN,OAAySF,GAa7S,OA3LAtE,qBAAU,WACN,IAAMyE,EAAW,IAAIC,KAASC,IAAI,CAC9BC,UAAW,MACXC,QAAS,GACTC,QAAS,EACTC,KAAM,EACNC,OAAQ,CAACzE,EAAKC,GACd5O,MAAO,sDAGXqQ,EAAOwC,GAEPA,EAASQ,GAAG,QAAQ,WAChB,IAAM3B,EAASC,GAAakB,EAASjB,aAErCiB,EAASS,UAAU,QAAS,CACxB,KAAQ,QACR,IAAOlC,EAAYyB,GACnB,YAAe,CACX,CAACnB,EAAO,GAAIA,EAAO,IACnB,CAACA,EAAO,GAAIA,EAAO,IACnB,CAACA,EAAO,GAAIA,EAAO,IACnB,CAACA,EAAO,GAAIA,EAAO,OAI3BmB,EAASU,SAAS,CACd,GAAM,QACN,OAAU,QACV,KAAQ,SACR,MAAS,CACL,iBAAkB,IAClB,uBAAwB,KAIhCV,EAASS,UAAU,WAAY,CAC3BtL,KAAM,UACNjF,KAAM,CACFiF,KAAM,oBACNmH,SAAU,CAAC,CACPnH,KAAM,UACN7B,WAAY,GACZkH,SAAU,CACNrF,KAAM,QACNsF,YAAa,CAACqB,EAAKC,SAMnCiE,EAASU,SAAS,CACdvG,GAAI,WACJwG,OAAQ,WACRxL,KAAM,SACNyL,MAAO,CACH,gBAAiB,EACjB,eAAgB,UAChB,iBAAkB,IAClB,sBAAuB,UACvB,sBAAuB,EACvB,wBAAyB,OAKjCC,YAAW,WACPb,EAASc,WACV,OAGPd,EAASQ,GAAG,aAAa,WACrBR,EAASe,iBAAiB,QAAS,iBAAkB,GACnC,YAAd9C,GACAO,OAIRwB,EAASQ,GAAG,UAAZ,sBAAuB,gCAAArO,EAAA,6DAEnB+L,EAAa,WACPW,EAASC,GAAakB,EAASjB,aAE/BiC,EAAchB,EAAStB,UAAU,SACjCuC,EAAW1C,EAAYyB,GANV,SAQbhE,MAAMiF,GARO,OAUnBD,EAAYrC,YAAY,CACpBnC,IAAKyE,EACLxG,YAAa,CACT,CAACoE,EAAO,GAAIA,EAAO,IACnB,CAACA,EAAO,GAAIA,EAAO,IACnB,CAACA,EAAO,GAAIA,EAAO,IACnB,CAACA,EAAO,GAAIA,EAAO,OAI3BgC,YAAW,WACPb,EAASe,iBAAiB,QAAS,iBAAkB,KACrD7C,OAAa9E,KACd,KAvBgB,8CA2BxB,IAEHmC,qBAAU,WACN,GAAK9K,EAAL,CAEA,GAAkB,YAAdwN,EAAyB,CACzB,IAAIiD,EAAkB,EAEtBtD,EAAcuD,SAAQ,SAAC7C,EAAU5N,GACzB4N,EAAS7K,QAAUiK,IACnBwD,EAAkBxQ,EAAM,MAI5BwQ,EAAkBtD,EAAcR,OAAS,IACzC8D,EAAkB,GAGtB9C,EAAQgD,aAAY,WACZF,GAAmBtD,EAAcR,OAAS,IACzC3M,EAAIiO,UAAU,SACVC,YAAY,CAAEnC,IAAK+B,EAAY9N,EAAKmN,EAAcsD,GAAiBzN,SAExEkK,EAAQC,EAAcsD,GAAiBzN,QAGvCyN,IAAoBtD,EAAcR,OAAS,EAC3C8D,EAAkB,EAElBA,MAGL,WAGW9H,IAAd6E,GAA2BE,GAC3BK,OAGL,CAACP,IA2CG,6BACH,yBAAK9D,GAAG,MAAMhN,MAAO,CAACyO,SAAU,WAAY7P,MAAO,OAAQC,OAAO,eAAD,OAAiBU,EAAW,KAAO,KAAnC,UACjE,yBAAKS,MAAO,CACRyO,SAAU,WACV5G,OAAQ,EACRC,KAAM,EACNF,MAAO,EACPjJ,OAAQ,SACR0D,aAAc,OACdlD,cAAe,MACfyB,WAAY,MACZhC,MAAO,QACPkL,gBAAiB,wBACjBoK,aAAc,MACdpV,QAAS,OACTwB,eAAgB,eAChBD,WAAY,WAEZ,kCACmB4L,IAAd6E,GAA2B,kBAACqD,GAAA,EAAD,CACxBtR,QAAS,kBAlOyC,0CAkOnCuR,KAEf,kBAAC,KAAD,OAEW,YAAdtD,GAA2B,kBAACpC,GAAA,EAAD,CAAkB7H,KAAM,GAAI7G,MAAO,CAACf,QAAQ,OAAQqD,YAAa,UAC9E,YAAdwO,GAA2B,kBAACqD,GAAA,EAAD,CACxBtR,QAAS,kBAAMkO,OAAa9E,KAE5B,kBAAC,KAAD,QAIR,yBAAKjM,MAAO,CACRpB,MAAO,QACP+B,WAAY,OACZ2B,YAAa,SAEb,kBAAC+R,GAAA,EAAD,CACIC,MAAO7D,EACP8D,aAAcpU,EAAUmQ,UACxBkE,kBAAkB,MAClBC,KAAM,IACNpM,IAAKnI,IAAMC,GAAWwQ,SAAS,EAAG,SAASL,UAC3ChI,IAAKnI,EACLuU,SAAU,SAACC,EAAOrO,GACdkK,EAASlK,GArDpBhD,GAEJA,EAAIiO,UAAU,SAAkCC,YAAY,CACzDnC,IAAK+B,EAAY9N,MAqDTgD,MAAOiK,OAyD3B,SAASoB,GAAaD,GAAgC,IAAD,EAChCA,EAAOkD,UADyB,mBAC1CC,EAD0C,KACtCC,EADsC,KAGjD,MAAO,CACHD,EAAG,GAAK,IACRA,EAAG,GAAK,IACRC,EAAG,GAAK,IACRA,EAAG,GAAK,KAhUhBhC,KAASiC,YAAc,4F,kECDR,SAASC,KACtB,IAAMC,EAAWC,cAEjB,OAAO,kBAACC,GAAA,EAAD,CAAQ1G,SAAS,UACtB,kBAAC2G,GAAA,EAAD,KACE,yBAAKpV,MAAO,CAACqV,SAAU,IACrB,kBAAC,IAAD,CAAMC,GAAG,IAAItV,MAAO,CAACuV,eAAgB,SACnC,kBAACzV,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAO,CAACa,MAAO,OAAQZ,WAAY,YAA5D,cAMJ,6BACyB,MAAtBgV,EAASO,UAAoB,kBAAC,IAAD,CAAMF,GAAG,SAAStV,MAAO,CAACuV,eAAgB,OAAQ1U,MAAO,SACrF,kBAAC+B,EAAA,EAAD,CAAQ6S,UAAW,kBAAC,KAAD,MAAkBzV,MAAO,CAACa,MAAO,SAApD,UAKqB,WAAtBoU,EAASO,UAAyB,kBAAC,IAAD,CAAMF,GAAG,IAAItV,MAAO,CAACuV,eAAgB,OAAQ1U,MAAO,SACrF,kBAAC+B,EAAA,EAAD,CAAQ6S,UAAW,kBAAC,KAAD,MAAgBzV,MAAO,CAACa,MAAO,SAAlD,gB,kCC5BJ6U,GAAQC,aAAe,CACzBC,QAAS,CACDC,QAAS,CAACC,IAAK,cAKZC,gBAAoBL,ICwBpBM,OAxBf,WAIE,OACE,kBAACC,GAAA,EAAD,CAAeP,MAAOA,IACpB,kBAAC,IAAD,KACE,kBAACV,GAAD,MACA,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOkB,KAAK,UACV,kBAAC9F,GAAD,CAAOzB,KAVJ,QAUcC,IATf,WAYJ,kBAAC,IAAD,CAAOsH,KAAK,KACV,kBAAClK,GAAD,WCZQmK,QACW,cAA7B7D,OAAO2C,SAASmB,UAEe,UAA7B9D,OAAO2C,SAASmB,UAEhB9D,OAAO2C,SAASmB,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFnI,SAASoI,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9H,MAAK,SAAA+H,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d9b0889f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/partly_cloudy.4ae3e84d.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly_cloudy_windy.bb410bac.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.633504b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun_thunderstorm.092af83d.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy_windy.475f49b1.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.c536ba25.svg\";","module.exports = __webpack_public_path__ + \"static/media/mostly_cloudy.9bed9624.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.e3f4d975.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.7f879cdd.svg\";","module.exports = __webpack_public_path__ + \"static/media/sunny_rain.bdf06b84.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunderstorm.41430d17.svg\";","module.exports = __webpack_public_path__ + \"static/media/blizzard.4181412c.svg\";","module.exports = __webpack_public_path__ + \"static/media/windy.d1a8592d.svg\";","import React from 'react';\nimport Card, {CardProps} from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport {Typography} from '@material-ui/core';\nimport {BalmyForecast} from './types/ForecastPeriod';\nimport dayjs from 'dayjs';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {makeStyles} from '@material-ui/styles';\n\nconst useStyles = makeStyles({\n    cardRoot: {\n        margin: '8px',\n        width: '230px',\n        height: '175px',\n        display: 'inline-block',\n        cursor: 'pointer',\n    },\n    cardRootMobile: {\n        margin: '4px',\n        padding: '4px',\n        width: '110px',\n        height: '100px',\n        display: 'inline-block'\n    },\n    cardContentMobile: {\n        padding: '4px',\n        '&:last-child': {\n            paddingBottom: 0,\n        }\n    }\n})\nexport default function ForecastCard({period, ...restProps}: CardProps & {period: BalmyForecast}) {\n    const isMobile = useMediaQuery('(max-width: 500px)');\n    const classes = useStyles();\n\n    const dayFormat = isMobile ? 'ddd D' : 'dddd MMM D';\n\n    return <Card classes={{\n        root: isMobile ? classes.cardRootMobile : classes.cardRoot,\n    }} {...restProps}>\n        <CardContent classes={{root: isMobile ? classes.cardContentMobile : ''}}>\n            <Typography variant='subtitle1' style={{fontFamily: 'Spartan'}}>\n               {dayjs(period.startTime).format(dayFormat)}\n            </Typography>\n\n            <div style={{\n                display: isMobile ? 'block': 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n            }}>\n\n                <div style={{display: isMobile ? 'block' : 'inline-block'}}>\n                    <img src={period.icon} style={{height: isMobile ? '30px' : '45px'}} alt=''/>\n                </div>\n\n                <div style={{\n                    display: isMobile ? 'block' : 'inline-block',\n                    textAlign: 'center',\n                    marginLeft: isMobile ? 0 : '16px',\n                    paddingTop: isMobile ? '4px': '8px',\n                    paddingBottom: isMobile ? 0 : '8px'\n                }}>\n                    <Typography variant='h6'>\n                        <span style={{color: '#d5202a'}}>{period.maxTemp}</span>°{' | '}\n                        <span style={{color: '#0053ae'}}>{period.minTemp}</span>°<span style={{fontWeight: 400}}>F</span>\n                    </Typography>\n\n                    {!isMobile && <Typography variant='body2'>\n                        {period.windSpeed} {period.windDirection}\n                    </Typography>}\n                </div>\n            </div>\n\n            {!isMobile && <Typography variant='body2'>{period.shortForecast}</Typography>}\n        </CardContent>\n    </Card>\n}","import React from 'react';\nimport {Typography} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport {BalmyForecast} from './types/ForecastPeriod';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { TransitionProps } from '@material-ui/core/transitions';\nimport dayjs from 'dayjs';\n\nconst Transition = React.forwardRef(function Transition(\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\n    ref: React.Ref<unknown>,\n) {\n    return <Slide direction='up' ref={ref} {...props} />;\n});\n\ninterface ForecastModalProps {\n    day: BalmyForecast | undefined;\n    open: boolean;\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\nexport default function ForecastModal({day, open, setOpen}: ForecastModalProps) {\n    if (!day) return null;\n\n    return (\n    <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={() => setOpen(false)}\n    >\n        <DialogTitle>{dayjs(day.startTime).format('dddd MMM Do')}</DialogTitle>\n        <DialogContent>\n            <div style={{paddingBottom: '24px'}}>\n                <div style={{display: 'flex', alignItems: 'center', marginBottom: '16px'}}>\n                    <img src={day.icon} style={{height: '75px', marginRight: '16px'}} alt=''/>\n                    <Typography variant='h6'>\n                        <span style={{color: '#d5202a'}}>{day.temperature}</span>°F\n                    </Typography>\n                </div>\n                <Typography variant='body1'>\n                    {day.detailedForecast}\n                </Typography>\n            </div>\n\n            {day.night && <div>\n                <Typography variant='h6'>Overnight</Typography>\n                <div style={{display: 'flex', alignItems: 'center', marginTop: '16px', marginBottom: '16px'}}>\n                    <img src={day.night.icon} style={{height: '75px', marginRight: '16px'}} alt=''/>\n                    <Typography variant='h6'>\n                        <span style={{color: '#d5202a'}}>{day.night.temperature}</span>°F\n                    </Typography>\n                </div>\n                <Typography variant='body1'>\n                    {day.night.detailedForecast}\n                </Typography>\n            </div>}\n\n            {/* <div style={{height: '250px', userSelect: 'none'}}>\n                <WeatherLine\n                    data={[day.hourlyPrecip]}\n                    yFormat={(value: any) => `${value}%`}\n                    yScale={{\n                        type: 'linear',\n                        min: 0,\n                        max: 100,\n                    }}\n                    axisLeft={{\n                        legend: 'Chance of Precip',\n                        tickValues: [0, 25, 50, 75, 100],\n                        format: (value) => `${value}%`,\n                    }}\n                    // axisBottom={{tickValues: days}}\n                    colors={'#15aadc'}\n                />\n            </div> */}\n\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={() => setOpen(false)} color=\"primary\">\n                Close\n            </Button>\n        </DialogActions>\n    </Dialog>\n    );\n}","import React, {useState} from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Typography} from '@material-ui/core';\nimport {BalmyForecast} from './types/ForecastPeriod';\nimport ForecastCard from './ForecastCard';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport ForecastModal from './ForecastModal';\nimport dayjs from 'dayjs';\n\nexport default function Forecast({data}: {data: BalmyForecast[] | undefined}) {\n    const isMobile = useMediaQuery('(max-width: 500px)');\n    const [forecastModalOpen, setForecastModalOpen] = useState(false);\n    const [activeForcast, setActiveForcast] = useState<BalmyForecast | undefined>();\n\n    if (!data) return null;\n\n    return <>\n        <div style={{overflowX: 'scroll'}}>\n            <div style={{\n              width: isMobile ? '900px' : '1750px',\n              display: 'flex',\n              paddingTop: '16px',\n              paddingBottom: '16px'\n            }}>\n                {data.map((day, idx) => {\n                  return <ForecastCard\n                    key={idx}\n                    period={day}\n                    onClick={() => {\n                      setForecastModalOpen(true);\n                      setActiveForcast(day);\n                    }}/>\n                })}\n            </div>\n        </div>\n        {!isMobile && <Table>\n            <TableBody>\n            {data.map((day, i) => {\n            return <TableRow key={i}>\n                 <TableCell style={{padding: isMobile ? '10px' : '16px'}}>\n                      <Typography variant='body2'>{dayjs(day.startTime).format('ddd')} {dayjs(day.startTime).format('M/D')}</Typography>\n                  </TableCell>\n                  <TableCell style={{padding: isMobile ? '10px' : '16px'}}>\n                      <Typography variant='body2' style={{fontSize: '15px', fontWeight: 'bold'}}>\n                          <span style={{color: '#d5202a'}}>{day.maxTemp}</span>°{' | '}\n                          <span style={{color: '#0053ae'}}>{day.minTemp}</span>°\n                          <span style={{fontWeight: 400}}>F</span>\n                      </Typography>\n                  </TableCell >\n                  <TableCell style={{padding: isMobile ? '10px' : '16px'}}>\n                      <Typography variant='body2'>{day.windSpeed} {day.windDirection}</Typography>\n                  </TableCell>\n                  {!isMobile && <TableCell style={{width: '50%', textAlign: 'left', padding: isMobile ? '10px' : '16px'}}>\n                      <Typography variant='body2'>{day.detailedForecast}</Typography>\n                  </TableCell>}\n              </TableRow>\n            })}\n            </TableBody>\n        </Table>}\n        <ForecastModal day={activeForcast} open={forecastModalOpen} setOpen={setForecastModalOpen} />\n    </>\n}","\nexport function CtoF(d: number) {\n    return Math.round((d * 9/5) + 32);\n}\n\nexport function metersPerSecondToMph(m: number) {\n    return Math.round(m * 2.23694)\n}\n\nexport function kphToMph(kph: number) {\n    return Math.round(kph * 0.62);\n}\n\nexport function metersToMiles(m: number) {\n    return Math.round(m * 0.0006213712);\n}\n\nexport function metersToFeet(m: number) {\n    return Math.round(m * 3.28084);\n}\n\nexport function parseIcon(iconUrl: string) {\n    return iconUrl\n        .replace('https://api.weather.gov/icons/', '')\n        .split('?')[0]\n        .split('/')\n        .slice(2)\n        .map(d => d.split(','))\n        .map(d => { return {icon: d[0], percent: parseInt(d[1]) }})\n        .sort((a, b) => b.percent - a.percent);\n}\n\n\nexport function distanceM (a: [number, number], b: [number, number]) {\n    const Δφ = (b[1] - a[1]) * Math.PI / 180;\n    const Δλ = (b[0] - a[0]) * Math.PI / 180;\n\n    const Q = Math.sin(Δφ/2) * Math.sin(Δφ/2) + Math.cos((a[1] * Math.PI / 180.0)) *\n        Math.cos((b[1] * Math.PI / 180.0)) * Math.sin(Δλ/2) * Math.sin(Δλ/2);\n\n    return 6371e3 * (2 * Math.atan2(Math.sqrt(Q), Math.sqrt(1-Q)));\n}\n\nexport function bearing(a: [number, number], b: [number, number]) {\n    const y = Math.sin(b[1]-a[1]) * Math.cos(b[0]);\n    const x = Math.cos(a[0]) * Math.sin(b[0]) -\n        Math.sin(a[0]) * Math.cos(b[0]) * Math.cos(b[1] - a[1]);\n\n    return ((Math.atan2(y, x)) * 180 / Math.PI + 360) % 360;\n}\n","  export default function getCardinalDirection(heading: number) {\n    // Principle winds + half-winds defintions via https://en.wikipedia.org/wiki/Points_of_the_compass\n    // 22.49deg between each step\n    switch(true) {\n      case (heading >= 348.76 || heading <= 11.25):\n        return 'N'\n      case heading >= 11.26 && heading <= 33.75:\n        return 'NNE'\n      case heading >= 33.76 && heading <= 56.25:\n        return 'NE'\n      case heading >= 56.26 && heading <= 78.75:\n        return 'ENE'\n      case heading >= 78.76 && heading <= 101.25:\n        return 'E'\n      case heading >= 101.26 && heading <= 123.75:\n        return 'ESE'\n      case heading >= 123.76 && heading <= 146.25:\n        return 'SE'\n      case heading >= 146.26 && heading <= 168.75:\n        return 'SSE'\n      case heading >= 168.76 && heading <= 191.25:\n        return 'S'\n      case heading >= 191.26 && heading <= 213.75:\n        return 'SSW'\n      case heading >= 213.76 && heading <= 236.25:\n        return 'SW'\n      case heading >= 236.26 && heading <= 258.75:\n        return 'WSW'\n      case heading >= 258.76 && heading <= 281.25:\n        return 'W'\n      case heading >= 281.26 && heading <= 303.75:\n        return 'WNW'\n      case heading >= 303.76 && heading <= 326.25:\n        return 'NW'\n      case heading >= 326.26 && heading <= 348.75:\n        return 'NNW'\n      default:\n        return 'N/A'\n    }\n  }","import React from 'react';\nimport {Typography} from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport {CtoF, metersToMiles, metersToFeet, metersPerSecondToMph, kphToMph} from './util';\nimport getCardinalDirection from './util/getCardinalDirection';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\ndayjs.extend(relativeTime);\n\nexport default function CurrentConditions(\n    {data, stationInfo}: {data: any | undefined, stationInfo: any | undefined}\n) {\n    const isMobile = useMediaQuery('(max-width: 500px)');\n\n    if (!data || !stationInfo) return null;\n\n    let stationName = stationInfo.properties.name.split(',');\n    if (stationName[1]) {\n        stationName = stationName[1].trim();\n    } else {\n        stationName = stationInfo.properties.name;\n    }\n\n    return <div>\n        <div style={{textAlign: 'left'}}>\n            <Typography variant='h5'>\n                {stationName}\n            </Typography>\n        </div>\n    <div style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: isMobile ? 'space-evenly' : 'space-between',\n        padding: isMobile ? 0 : '40px',\n    }}>\n        <div>\n            <img\n                src={data.icon}\n                style={{width: isMobile ? '130px': '175px'}}\n                alt=''\n            />\n        </div>\n        <div>\n            <Typography variant={isMobile ? 'h2': 'h1'} style={{fontFamily: 'Spartan'}}>\n                {CtoF(data.temperature.value)}°F\n            </Typography>\n            {data.feelsLike && <Typography variant='h5'>\n                Feels like {CtoF(data.feelsLike)}°F\n            </Typography>}\n            {!isMobile && <div>\n                <Typography variant='h3' style={{display: 'inline-block'}}>\n                    <NavigationIcon style={{\n                        transform: `rotate(${data.windDirection.value - 180}deg)`,\n                        marginRight: '8px',\n                    }}/>\n                    {kphToMph(data.windSpeed.value)}\n                    {data.windGust.value ?\n                    ' | ' + kphToMph(data.windGust.value) : ''}\n                </Typography>\n                <Typography variant='h5' style={{display: 'inline-block', marginLeft: '8px'}}>mph</Typography>\n                <Typography variant='h5'  style={{display: 'inline-block', marginLeft: '8px'}}>\n                    {getCardinalDirection(data.windDirection.value)}\n                </Typography>\n            </div>}\n        </div>\n\n        {!isMobile && <CurrentDetails data={data} stationInfo={stationInfo} /> }\n    </div>\n        {isMobile && <CurrentDetails data={data} stationInfo={stationInfo} /> }\n    </div>;\n}\n\nfunction CurrentDetails({data, stationInfo}: {data: any, stationInfo: any}) {\n    if (!data) return null;\n\n    const distanceMi = metersToMiles(stationInfo.properties.distance);\n\n    return <div>\n        <Table size=\"small\" >\n            <TableBody>\n                <TableRow>\n                    <TableCell>\n                    <Typography variant='subtitle2'>Last updated</Typography>\n                    </TableCell>\n                    <TableCell>\n                    <Typography variant='body2'>{dayjs(data.timestamp).fromNow()}</Typography>\n                    </TableCell>\n                </TableRow>\n\n                <TableRow>\n                    <TableCell>\n                    <Typography variant='subtitle2'>Elevation</Typography>\n                    </TableCell>\n                    <TableCell>\n                    <Typography variant='body2'>\n                        {metersToFeet(stationInfo.properties.elevation.value)} ft\n                    </Typography>\n                    </TableCell>\n                </TableRow>\n\n                <TableRow>\n                    <TableCell>\n                    <Typography variant='subtitle2'>Distance</Typography>\n                    </TableCell>\n                    <TableCell>\n                    <Typography variant='body2'>\n                        {distanceMi} mi {getCardinalDirection(stationInfo.properties.bearing)}\n                    </Typography>\n                    </TableCell>\n                </TableRow>\n\n                <TableRow className='mobile-wind'>\n                    <TableCell>\n                        <Typography variant='subtitle2'>Wind</Typography>\n                    </TableCell>\n                    <TableCell>\n                        <Typography variant='body2'>\n                            {metersPerSecondToMph(data.windSpeed.value)} mph {getCardinalDirection(data.windDirection.value)}\n                        </Typography>\n                    </TableCell>\n                </TableRow>\n                {data.windGust.value && <TableRow className='mobile-wind'>\n                    <TableCell>\n                        <Typography variant='subtitle2'>Gusting</Typography>\n                    </TableCell>\n                    <TableCell>\n                        <Typography variant='body2'>\n                            {metersPerSecondToMph(data.windGust.value)} mph\n                        </Typography>\n                    </TableCell>\n                </TableRow>}\n\n            <TableRow>\n                <TableCell>\n                <Typography variant='subtitle2'>Humidity</Typography>\n                </TableCell>\n                <TableCell>\n                <Typography variant='body2'>{\n                    Math.round(data.relativeHumidity.value)\n                }%</Typography>\n                </TableCell>\n            </TableRow>\n\n            <TableRow>\n                <TableCell>\n                <Typography variant='subtitle2'>Dew Point</Typography>\n                </TableCell>\n                <TableCell>\n                <Typography variant='body2'>{\n                    CtoF(data.dewpoint.value)\n                }°F</Typography>\n                </TableCell>\n            </TableRow>\n\n            <TableRow>\n                <TableCell>\n                <Typography variant='subtitle2'>Visiblity</Typography>\n                </TableCell>\n                <TableCell>\n                <Typography variant='body2'>{\n                    metersToMiles(data.visibility.value)\n                } mi</Typography>\n                </TableCell>\n            </TableRow>\n\n            <TableRow>\n                <TableCell>\n                <Typography variant='subtitle2'>Pressure</Typography>\n                </TableCell>\n                <TableCell>\n                <Typography variant='body2'>{\n                    Math.round(data.barometricPressure.value * 0.01)\n                } mb</Typography>\n                </TableCell>\n            </TableRow>\n\n            </TableBody>\n        </Table>\n    </div>\n}","import React from 'react';\nimport {ResponsiveLine, LineSvgProps} from '@nivo/line';\nimport {Typography} from '@material-ui/core';\nimport dayjs from 'dayjs';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\ninterface WeatherLine extends LineSvgProps {\n    areaBaselineValue?: number;\n}\n\nexport default function WeatherLine({axisBottom, axisLeft, ...props}: WeatherLine) {\n    const isMobile = useMediaQuery('(max-width: 500px)');\n\n    return <ResponsiveLine\n        margin={{ top: 20, right: 20, bottom: 50, left: 50 }}\n        xScale={{\n            type: 'time',\n            format: 'native',\n            precision: 'day',\n        }}\n        xFormat=\"time:%m/%d %H:00\"\n        yFormat={(value: any) => `${value}°F`}\n        yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\n        curve='monotoneX'\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n            format: '%a %m/%e',\n            tickValues: 'every day',\n            legendOffset: -12,\n            orient: 'bottom',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: isMobile ? -45 : 0,\n            ...axisBottom,\n        }}\n        axisLeft={{\n            orient: 'left',\n            tickSize: 5,\n            tickValues: 7,\n            tickPadding: 5,\n            tickRotation: 0,\n            legendOffset: -45,\n            legendPosition: 'middle',\n            ...axisLeft,\n        }}\n        colors={{ scheme: 'nivo' }}\n        lineWidth={2}\n        enablePoints={false}\n        enableArea={true}\n        areaOpacity={0.5}\n        useMesh={true}\n        enableSlices='x'\n        sliceTooltip={(slice) => {\n            return <div style={{\n                paddingTop: '2px',\n                paddingBottom: '2px',\n                paddingLeft: '4px',\n                paddingRight: '4px',\n                backgroundColor: '#fff',\n                border: '1px solid #eee',\n            }}>\n                <Typography variant='subtitle2'>\n                {slice.slice.points[0].data.yFormatted} @ {dayjs(slice.slice.points[0].data.x).format('hA')}\n                </Typography>\n            </div>\n        }}\n        {...props}\n    />\n}","import React from 'react';\nimport dayjs from 'dayjs'\nimport minMax from 'dayjs/plugin/minMax';\nimport WeatherLine from './WeatherLine';\ndayjs.extend(minMax);\n\nexport default function HourlyGraphs({data}: {data: any | undefined}) {\n    if (!data) return null;\n\n    const height = '200px';\n\n\n    const times = data.temperature.data.map((d: any) => dayjs(d.x))\n    const minDay = dayjs.min(...times).startOf('day').add(1, 'day');\n    const maxDay = dayjs.max(...times).startOf('day');\n\n    const range = maxDay.diff(minDay, 'days');\n    const days = [minDay.toDate()]\n\n    for (let i = 1; i <= range; i++) {\n        days.push(minDay.clone().add(i, 'days').toDate())\n    }\n\n    return <div>\n        <div style={{height, userSelect: 'none'}}>\n            <WeatherLine\n                data={[data.temperature]}\n                areaBaselineValue={Math.min(...data.temperature.data.map((d: any) => d.value)) - 10}\n                yScale={{\n                    type: 'linear',\n                    min: Math.min(...data.temperature.data.map((d: any) => d.value)) - 10,\n                    max: Math.max(...data.temperature.data.map((d: any) => d.value)) + 10,\n                }}\n                yFormat={(value: any) => `${value}°F`}\n                axisLeft={{\n                    legend: 'Degrees F',\n                    format: (value) => `${value}°`,\n                }}\n                axisBottom={{tickValues: days}}\n                colors={'#ff8833'}\n            />\n        </div>\n\n        <div style={{height, userSelect: 'none'}}>\n            <WeatherLine\n                data={[data.skyCover]}\n                yFormat={(value: any) => `${value}%`}\n                yScale={{\n                    type: 'linear',\n                    min: 0,\n                    max: 100,\n                }}\n                axisLeft={{\n                    legend: 'Cloud cover',\n                    tickValues: [0, 25, 50, 75, 100],\n                    format: (value) => `${value}%`,\n                }}\n                axisBottom={{tickValues: days}}\n                colors={'#a3a3a3'}\n            />\n        </div>\n\n        <div style={{height, userSelect: 'none'}}>\n            <WeatherLine\n                data={[data.probabilityOfPrecipitation]}\n                yFormat={(value: any) => `${value}%`}\n                yScale={{\n                    type: 'linear',\n                    min: 0,\n                    max: 100,\n                }}\n                axisLeft={{\n                    legend: 'Chance of Precip',\n                    tickValues: [0, 25, 50, 75, 100],\n                    format: (value) => `${value}%`,\n                }}\n                axisBottom={{tickValues: days}}\n                colors={'#15aadc'}\n            />\n        </div>\n\n        <div style={{height, userSelect: 'none'}}>\n            <WeatherLine\n                data={[data.windSpeed]}\n                yFormat={(value: any) => `${value} mph`}\n                yScale={{\n                    type: 'linear',\n                    min: 0,\n                    max: Math.max(...data.windSpeed.data.map((d: any) => d.value)) + 2,\n                }}\n                axisLeft={{legend: 'Wind Speed (mph)'}}\n                axisBottom={{tickValues: days}}\n                colors={'#15aadc'}\n                enableArea={false}\n            />\n        </div>\n    </div>\n}","import Sun from './icons/sun.svg';\nimport PartlyCloudy from './icons/partly_cloudy.svg';\nimport MostlyCloudy from './icons/mostly_cloudy.svg';\nimport Cloudy from './icons/cloudy.svg';\nimport PartlyCloudyWindy from './icons/partly_cloudy_windy.svg';\nimport Snow from './icons/snow.svg';\nimport Rain from './icons/rain.svg';\nimport SunnyRain from './icons/sunny_rain.svg';\nimport Thunderstorm from './icons/thunderstorm.svg';\nimport SunThunderstorm from './icons/sun_thunderstorm.svg';\nimport Blizzard from './icons/blizzard.svg';\nimport Windy from './icons/windy.svg';\nimport CloudyWindy from './icons/cloudy_windy.svg';\n\n// https://thenounproject.com/anusha.narvekar/collection/weather/\nexport default {\n    \"skc\": {\n        \"description\": \"Fair/clear\",\n        \"icon\": Sun,\n    },\n    \"few\": {\n        \"description\": \"A few clouds\",\n        \"icon\": PartlyCloudy,\n    },\n    \"sct\": {\n        \"description\": \"Partly cloudy\",\n        \"icon\": PartlyCloudy,\n    },\n    \"bkn\": {\n        \"description\": \"Mostly cloudy\",\n        \"icon\": MostlyCloudy,\n    },\n    \"ovc\": {\n        \"description\": \"Overcast\",\n        \"icon\": Cloudy,\n    },\n    \"wind_skc\": {\n        \"description\": \"Fair/clear and windy\",\n        \"icon\": Windy,\n    },\n    \"wind_few\": {\n        \"description\": \"A few clouds and windy\",\n        \"icon\": PartlyCloudyWindy,\n    },\n    \"wind_sct\": {\n        \"description\": \"Partly cloudy and windy\",\n        \"icon\": PartlyCloudyWindy,\n    },\n    \"wind_bkn\": {\n        \"description\": \"Mostly cloudy and windy\",\n        \"icon\": CloudyWindy,\n    },\n    \"wind_ovc\": {\n        \"description\": \"Overcast and windy\",\n        \"icon\": CloudyWindy,\n    },\n    \"snow\": {\n        \"description\": \"Snow\",\n        \"icon\": Snow,\n    },\n    \"rain_snow\": {\n        \"description\": \"Rain/snow\"\n    },\n    \"rain_sleet\": {\n        \"description\": \"Rain/sleet\"\n    },\n    \"snow_sleet\": {\n        \"description\": \"Rain/sleet\"\n    },\n    \"fzra\": {\n        \"description\": \"Freezing rain\"\n    },\n    \"rain_fzra\": {\n        \"description\": \"Rain/freezing rain\"\n    },\n    \"snow_fzra\": {\n        \"description\": \"Freezing rain/snow\"\n    },\n    \"sleet\": {\n        \"description\": \"Sleet\"\n    },\n    \"rain\": {\n        \"description\": \"Rain\",\n        \"icon\": Rain,\n    },\n    \"rain_showers\": {\n        \"description\": \"Rain showers (high cloud cover)\",\n        \"icon\": Rain,\n    },\n    \"rain_showers_hi\": {\n        \"description\": \"Rain showers (low cloud cover)\",\n        \"icon\": SunnyRain,\n    },\n    \"tsra\": {\n        \"description\": \"Thunderstorm (high cloud cover)\",\n        \"icon\": Thunderstorm,\n    },\n    \"tsra_sct\": {\n        \"description\": \"Thunderstorm (medium cloud cover)\",\n        \"icon\": SunThunderstorm,\n    },\n    \"tsra_hi\": {\n        \"description\": \"Thunderstorm (low cloud cover)\",\n        \"icon\": SunThunderstorm,\n    },\n    \"tornado\": {\n        \"description\": \"Tornado\"\n    },\n    \"hurricane\": {\n        \"description\": \"Hurricane conditions\"\n    },\n    \"tropical_storm\": {\n        \"description\": \"Tropical storm conditions\"\n    },\n    \"dust\": {\n        \"description\": \"Dust\"\n    },\n    \"smoke\": {\n        \"description\": \"Smoke\"\n    },\n    \"haze\": {\n        \"description\": \"Haze\"\n    },\n    \"hot\": {\n        \"description\": \"Hot\"\n    },\n    \"cold\": {\n        \"description\": \"Cold\"\n    },\n    \"blizzard\": {\n        \"description\": \"Blizzard\",\n        \"icon\": Blizzard,\n    },\n    \"fog\": {\n        \"description\": \"Fog/mist\"\n    }\n}","import React, {useState, useEffect} from 'react';\nimport dayjs from 'dayjs';\nimport isBetween from 'dayjs/plugin/isBetween';\nimport Forecast from './Forecast';\nimport CurrentConditions from './CurrentConditions';\nimport HourlyGraphs from './HourlyGraphs';\nimport {CtoF, parseIcon, distanceM, bearing} from './util';\nimport icons from './icons';\nimport {ForecastPeriod} from './types/ForecastPeriod';\nimport CircularProgress from '@material-ui/core/CircularProgress';\ndayjs.extend(isBetween);\n\nexport default function ForecastPage() {\n    const [data, setData] = useState<any>({\n        stationInfo: undefined,\n        currentConditions: undefined,\n        forecast: undefined,\n        hourlyForecast: undefined,\n    });\n    const [lastRefresh, setLastRefresh] = useState<dayjs.Dayjs | undefined>(undefined);\n\n    async function fetchData() {\n        const LNG = -93.2054;\n        const LAT = 44.9475;\n        const {grid, station} = await fetchLocationInfo(LNG, LAT);\n\n        let [stationInfo, currentConditions, forecast, hourlyForecast] = await Promise.all([\n            await fetchStationInfo(station.id),\n            await fetchCurrentConditions(station.id + '/observations/latest'),\n            await fetchForecast(grid + '/forecast'),\n            await fetchHourlyForecast(grid),\n        ]);\n\n        stationInfo.properties.distance = distanceM(\n          [LNG, LAT],\n          ((stationInfo.geometry.coordinates as any) as [number, number]),\n        );\n\n        stationInfo.properties.bearing = bearing(\n          [LNG, LAT],\n          ((stationInfo.geometry.coordinates as any) as [number, number]),\n        );\n\n        forecast = forecast.map(day => {\n          const startTime = dayjs(day.startTime).startOf('day')\n          const endTime = dayjs(startTime).add(31, 'hours');\n\n          return {\n            ...day,\n            hourlyPrecip: hourlyForecast.probabilityOfPrecipitation.values.filter((d: any) =>\n                dayjs(d.validTime.split('/')[0]).isBetween(startTime, endTime)\n            ),\n            hourlyClouds: hourlyForecast.skyCover.values.filter((d: any) =>\n                dayjs(d.validTime.split('/')[0]).isBetween(startTime, endTime)\n            ),\n            hourlyTemp: hourlyForecast.temperature.values.filter((d: any) =>\n                dayjs(d.validTime.split('/')[0]).isBetween(startTime, endTime)\n            ),\n            hourlyFeelsLike: hourlyForecast.apparentTemperature.values.filter((d: any) =>\n                dayjs(d.validTime.split('/')[0]).isBetween(startTime, endTime)\n            ),\n            hourlyWind: hourlyForecast.windSpeed.values.filter((d: any) =>\n                dayjs(d.validTime.split('/')[0]).isBetween(startTime, endTime)\n            ),\n            hourlyWindGust: hourlyForecast.windGust.values.filter((d: any) =>\n                dayjs(d.validTime.split('/')[0]).isBetween(startTime, endTime)\n            ),\n            hourlyDewpoint: hourlyForecast.dewpoint.values.filter((d: any) =>\n                dayjs(d.validTime.split('/')[0]).isBetween(startTime, endTime)\n            ),\n          }\n        })\n\n       setData({stationInfo, currentConditions, forecast, hourlyForecast});\n       setLastRefresh(dayjs());\n    }\n\n    useEffect(() => {\n        fetchData();\n\n        // If the user puts the page in the background and comes back >= 5 minutes later, refresh\n        document.addEventListener('visibilitychange', () => {\n            const sinceLastRefresh = lastRefresh && dayjs().diff(lastRefresh) / 60000;\n\n            if (sinceLastRefresh && sinceLastRefresh >= 5) {\n                fetchData();\n            }\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return <div className='App' style={{maxWidth: '1000px', margin: '0 auto', padding: '25px'}}>\n      {!data.stationInfo && <div\n        style={{position: 'absolute', width: 'calc(100% - 50px)', height: 'calc(100% - 124px)', display: 'flex', alignItems: 'center', justifyContent: 'center'}}\n      >\n        <CircularProgress/>\n      </div>}\n      {data.stationInfo && <>\n        <CurrentConditions data={data.currentConditions} stationInfo={data.stationInfo}/>\n        <Forecast data={data.forecast} />\n        <HourlyGraphs data={data.hourlyForecast}/>\n      </>}\n    </div>\n}\n\nasync function fetchLocationInfo(lng: number, lat: number) {\n  const pointInfo = await fetch(`https://api.weather.gov/points/${lat},${lng}`)\n    .then(res => res.json());\n\n  const station = await fetch(pointInfo.properties.observationStations)\n    .then(res => res.json())\n    .then(json => json.features[0]);\n\n  return {\n    grid: pointInfo.properties.forecastGridData,\n    station,\n  }\n}\n\nasync function fetchStationInfo(url: string) {\n  const response = await fetch('https://api.weather.gov/stations/KMSP')\n    .then(res => res.json());\n\n    return response;\n}\n\nasync function fetchCurrentConditions(url: string) {\n    const response = await fetch('https://api.weather.gov/stations/KMSP/observations/latest')\n      .then(res => res.json())\n\n    const parsedIcons = parseIcon(response.properties.icon);\n    if (parsedIcons) {\n      response.properties.icon = (icons as any)[parsedIcons[0]?.icon].icon;\n    }\n\n    response.properties['feelsLike'] = (\n        response.properties.windChill.value || response.properties.heatIndex.value\n    );\n    return response.properties;\n}\n\nasync function fetchForecast(url: string): Promise<ForecastPeriod[]> {\n    const response = await fetch(url)\n      .then(res => res.json());\n\n    const parsed = response.properties.periods\n      .map((period: ForecastPeriod, idx: number) => {\n        const temps = [\n          period.temperature,\n          ...(response.properties.periods[idx] ? [response.properties.periods[idx].temperature] : []),\n          ...(response.properties.periods[idx + 1] ? [response.properties.periods[idx + 1].temperature] : [])\n        ]\n\n        const parsedIcon = parseIcon(period.icon)[0];\n        const balmyIcon = (icons as any)[parsedIcon.icon];\n\n        return {\n          ...period,\n          minTemp: Math.min(...temps),\n          maxTemp: Math.max(...temps),\n          precip: parsedIcon.percent,\n          icon: balmyIcon.icon || period.icon,\n        }\n      });\n\n     const days = parsed.map((day: ForecastPeriod) => {\n        const night = parsed.filter(\n          (period: ForecastPeriod) => {\n            if (period.name === day.name + ' Night') return period;\n            if (day.name === 'Today' && period.name === 'Tonight') return period;\n            return false;\n          }\n        );\n\n        return {\n          ...day,\n          night: night.length ? night[0] : undefined,\n          shortForecast: day.shortForecast.split(' then ')[0],\n\n        }\n      }).filter((period: ForecastPeriod) => period.isDaytime);\n\n    return days;\n}\n\n\nasync function fetchHourlyForecast(url: string) {\n    const hourly = await fetch(url)\n        .then(res => res.json())\n        .then(res => res.properties);\n\n    // Convert windspeed from knots to mph\n    hourly.windSpeed.data = hourly.windSpeed.values.map((d: any) => {\n        return {\n            ...d,\n            x: dayjs(d.validTime.split('/')[0]).toDate(),\n            y: Math.round(d.value * 1.15078),\n        }\n    });\n\n    // Convert temp from C to F\n    hourly.temperature.data = hourly.temperature.values.map((d: any) => {\n        return {\n            ...d,\n            x: dayjs(d.validTime.split('/')[0]).toDate(),\n            y: CtoF(d.value),\n            value: CtoF(d.value),\n        }\n    });\n\n    hourly.skyCover.data = hourly.skyCover.values.map((d: any) => {\n        return {\n            ...d,\n            x: dayjs(d.validTime.split('/')[0]).toDate(),\n            y: d.value,\n        }\n    });\n\n    hourly.probabilityOfPrecipitation.data = hourly.probabilityOfPrecipitation.values.map((d: any) => {\n        return {\n            ...d,\n            x: dayjs(d.validTime.split('/')[0]).toDate(),\n            y: d.value,\n        }\n    });\n\n    // Nivo needs an id\n    hourly.windSpeed['id'] = 'windSpeed';\n    hourly.skyCover['id'] = 'skyCover';\n    hourly.temperature['id'] = 'temperature';\n    hourly.probabilityOfPrecipitation['id'] = 'probabilityOfPrecipitation';\n\n    return hourly;\n}\n","import React, {useEffect, useState, useMemo} from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport Slider from '@material-ui/core/Slider';\nimport dayjs from 'dayjs';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport IconButton from '@material-ui/core/IconButton';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nmapboxgl.accessToken = 'pk.eyJ1Ijoiam9obmpjeiIsImEiOiJjazc5OW91M3UwMTEzM2ZxdTg0a3RlNHVkIn0.ebttXrA6i4iH0lxBLDGmjQ';\n\nexport default function Radar({lng, lat}: {lng: number; lat: number}) {\n    const [map, setMap] = useState<mapboxgl.Map | undefined>();\n    const [startTime] = useState(dayjs().valueOf());\n    const [time, setTime] = useState(startTime);\n    const timeIntervals = useMemo(() => getTimeIntervals(startTime), [startTime]);\n    const [loopState, setLoopState] = useState<'loading'|'playing'|undefined>(undefined);\n    const [loop, setLoop] = useState<NodeJS.Timeout | undefined>(undefined);\n    const isMobile = useMediaQuery('(max-width: 500px)');\n\n    async function getRadarLoop() {\n        if (!map) return;\n        setLoopState('loading');\n        // Get a radar url for each time interval\n        const radarPromises = timeIntervals.map(interval => fetch(getRadarUrl(map, interval.value)));\n\n        await Promise.all(radarPromises);\n        setLoopState('playing');\n    }\n\n    useEffect(() => {\n        const innerMap = new mapboxgl.Map({\n            container: 'map',\n            maxZoom: 10,\n            minZoom: 4,\n            zoom: 7,\n            center: [lng, lat],\n            style: 'mapbox://styles/johnjcz/ck7t9f4aq2wuy1imokjil5qxm',\n        });\n\n        setMap(innerMap);\n\n        innerMap.on('load', () => {\n            const bounds = bufferBounds(innerMap.getBounds());\n\n            innerMap.addSource('radar', {\n                'type': 'image',\n                'url': getRadarUrl(innerMap),\n                'coordinates': [\n                    [bounds[0], bounds[3]],\n                    [bounds[2], bounds[3]],\n                    [bounds[2], bounds[1]],\n                    [bounds[0], bounds[1]],\n                ]\n            })\n\n            innerMap.addLayer({\n                'id': 'radar',\n                'source': 'radar',\n                'type': 'raster',\n                'paint': {\n                    'raster-opacity': 0.75,\n                    'raster-fade-duration': 0,\n                }\n            },)\n\n            innerMap.addSource('location', {\n                type: 'geojson',\n                data: {\n                    type: 'FeatureCollection',\n                    features: [{\n                        type: 'Feature',\n                        properties: {},\n                        geometry: {\n                            type: 'Point',\n                            coordinates: [lng, lat],\n                        }\n                    }]\n                }\n            })\n\n            innerMap.addLayer({\n                id: 'location',\n                source: 'location',\n                type: 'circle',\n                paint: {\n                    'circle-radius': 6,\n                    'circle-color': '#4287f5',\n                    'circle-opacity': 0.85,\n                    'circle-stroke-color': '#ffffff',\n                    'circle-stroke-width': 2,\n                    'circle-stroke-opacity': 0.85,\n                }\n            })\n\n            // For some reason a small gap will appear at the bottom without this\n            setTimeout(() => {\n                innerMap.resize();\n            }, 50);\n        })\n\n        innerMap.on('movestart', () => {\n            innerMap.setPaintProperty('radar', 'raster-opacity', 0)\n            if (loopState === 'playing') {\n                pauseLoop();\n            }\n        })\n\n        innerMap.on('moveend', async () => {\n            // Hack into the loading state\n            setLoopState('loading');\n            const bounds = bufferBounds(innerMap.getBounds());\n\n            const radarSource = innerMap.getSource('radar') as mapboxgl.ImageSource;\n            const radarUrl = getRadarUrl(innerMap);\n\n            await fetch(radarUrl);\n\n            radarSource.updateImage({\n                url: radarUrl,\n                coordinates: [\n                    [bounds[0], bounds[3]],\n                    [bounds[2], bounds[3]],\n                    [bounds[2], bounds[1]],\n                    [bounds[0], bounds[1]],\n                ]\n            })\n            // A delay helps prevent the illusion of the radar jumping around\n            setTimeout(() => {\n                innerMap.setPaintProperty('radar', 'raster-opacity', 0.75);\n                setLoopState(undefined);\n            }, 500);\n\n        });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        if (!map) return;\n\n        if (loopState === 'playing') {\n            let currentInterval = 0;\n\n            timeIntervals.forEach((interval, idx) => {\n                if (interval.value === time) {\n                    currentInterval = idx + 1;\n                }\n            });\n\n            if (currentInterval > timeIntervals.length - 1) {\n                currentInterval = 0;\n            }\n\n            setLoop(setInterval(() => {\n                if (currentInterval <= timeIntervals.length - 1) {\n                    (map.getSource('radar') as mapboxgl.ImageSource)\n                        .updateImage({ url: getRadarUrl(map, timeIntervals[currentInterval].value)});\n\n                    setTime(timeIntervals[currentInterval].value);\n                }\n\n                if (currentInterval === timeIntervals.length + 2) {\n                    currentInterval = 0;\n                } else {\n                    currentInterval++;\n                }\n\n            }, 250))\n        }\n\n        if (loopState === undefined && loop) {\n            pauseLoop();\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [loopState]);\n\n    function pauseLoop() {\n        if (!map || !loop) return;\n        clearInterval(loop);\n        setLoop(undefined);\n        (map.getSource('radar') as mapboxgl.ImageSource)\n                .updateImage({ url: getRadarUrl(map)});\n    }\n\n    function getRadarUrl(map: mapboxgl.Map, forceTime?: number) {\n        const bounds = bufferBounds(map.getBounds());\n\n        const southWest = [bounds[0], bounds[1]];\n        const northEast = [bounds[2], bounds[3]];\n\n        const params = {\n            dpi: '96',\n            transparent: 'true',\n            format: 'png32',\n            // The type defintions for URLSearchParams want all values to be strings\n            time: forceTime ? `${forceTime}` : `${time}`,\n            bbox: `${southWest.join(',')},${northEast.join(',')}`,\n            bboxSR: '4326',\n            imageSR: '4326',\n            size: `${window.innerWidth},${window.innerHeight}`,\n            f: 'image',\n        }\n\n        const queryString = new URLSearchParams(params).toString()\n        return `https://nowcoast.noaa.gov/arcgis/rest/services/nowcoast/radar_meteo_imagery_nexrad_time/MapServer/export?dynamicLayers=%5B%7B%22id%22%3A3%2C%22name%22%3A%22Image%22%2C%22source%22%3A%7B%22type%22%3A%22mapLayer%22%2C%22mapLayerId%22%3A3%7D%2C%22minScale%22%3A0%2C%22maxScale%22%3A0%7D%5D&${queryString}`\n\n    }\n\n    function updateRadar() {\n        if (!map) return;\n\n        (map.getSource('radar') as mapboxgl.ImageSource).updateImage({\n            url: getRadarUrl(map)\n        });\n\n    }\n\n    return <div>\n        <div id='map' style={{position: 'absolute', width: '100%', height: `calc(100% - ${isMobile ? '56' : '64'}px)`}}></div>\n        <div style={{\n            position: 'absolute',\n            bottom: 0,\n            left: 0,\n            right: 0,\n            margin: '0 auto',\n            marginBottom: '35px',\n            paddingBottom: '8px',\n            paddingTop: '8px',\n            width: '325px',\n            backgroundColor: 'rgba(255,255,255,0.8)',\n            borderRadius: '6px',\n            display: 'flex',\n            justifyContent: 'space-evenly',\n            alignItems: 'center',\n        }}>\n            <div >\n                {loopState === undefined && <IconButton\n                    onClick={() => getRadarLoop()}\n                >\n                    <PlayArrowIcon/>\n                </IconButton>}\n                {loopState === 'loading' && <CircularProgress size={23} style={{padding:'11px', marginRight: '10px'}}/>}\n                {loopState === 'playing' && <IconButton\n                    onClick={() => setLoopState(undefined)}\n                >\n                    <PauseIcon/>\n                </IconButton>}\n            </div>\n\n            <div style={{\n                width: '200px',\n                marginLeft: '24px',\n                marginRight: '24px',\n            }}>\n                <Slider\n                    marks={timeIntervals}\n                    defaultValue={startTime.valueOf()}\n                    valueLabelDisplay='off'\n                    step={900000}\n                    min={dayjs(startTime).subtract(4, 'hours').valueOf()}\n                    max={startTime}\n                    onChange={(event, value) => {\n                        setTime((value as number));\n                        updateRadar();\n                    }}\n                    value={time}\n                />\n            </div>\n\n        </div>\n    </div>\n}\n\nfunction getTimeIntervals(startTime: number) {\n    return [\n        {\n            value: dayjs(startTime).subtract(4, 'hours').valueOf(),\n            label: dayjs(startTime).subtract(4, 'hours').format('H:mm'),\n        },\n        {\n            value: dayjs(startTime).subtract(3.5, 'hours').valueOf(),\n        },\n        {\n            value: dayjs(startTime).subtract(3.25, 'hours').valueOf(),\n        },\n        {\n            value: dayjs(startTime).subtract(3, 'hours').valueOf(),\n            label: dayjs(startTime).subtract(3, 'hours').format('H:mm'),\n        },\n        {\n            value: dayjs(startTime).subtract(2.5, 'hours').valueOf(),\n        },\n        {\n            value: dayjs(startTime).subtract(2.25, 'hours').valueOf(),\n        },\n        {\n            value: dayjs(startTime).subtract(2, 'hours').valueOf(),\n            label: dayjs(startTime).subtract(2, 'hours').format('H:mm'),\n        },\n        {\n            value: dayjs(startTime).subtract(1.5, 'hours').valueOf(),\n        },\n        {\n            value: dayjs(startTime).subtract(1.25, 'hours').valueOf(),\n        },\n        {\n            value: dayjs(startTime).subtract(1, 'hours').valueOf(),\n            label: dayjs(startTime).subtract(1, 'hours').format('H:mm'),\n        },\n        {\n            value: dayjs(startTime).subtract(0.5, 'hours').valueOf(),\n        },\n        {\n            value: dayjs(startTime).subtract(0.25, 'hours').valueOf(),\n        },\n        {\n            value: startTime,\n            label: dayjs(startTime).format('H:mm'),\n        },\n    ]\n}\n\nfunction bufferBounds(bounds: mapboxgl.LngLatBounds) {\n    const [sw, ne] = bounds.toArray();\n\n    return [\n        sw[0] - 0.05,\n        sw[1] - 0.05,\n        ne[0] + 0.05,\n        ne[1] + 0.05,\n    ]\n}","import React from 'react';\nimport {Link, useLocation} from 'react-router-dom';\nimport SatelliteIcon from '@material-ui/icons/Satellite';\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nexport default function Header() {\n  const location = useLocation();\n\n  return <AppBar position='static'>\n    <Toolbar>\n      <div style={{flexGrow: 1}}>\n        <Link to='/' style={{textDecoration: 'none'}}>\n          <Typography variant='h5' style={{color: '#fff', fontFamily: 'Spartan'}}>\n            balmy.us\n          </Typography>\n        </Link>\n      </div>\n\n      <div>\n        {location.pathname === '/' && <Link to='/radar' style={{textDecoration: 'none', color: '#fff'}}>\n          <Button startIcon={<SatelliteIcon/>} style={{color: '#fff'}}>\n              Radar\n          </Button>\n        </Link>}\n\n        {location.pathname === '/radar' && <Link to='/' style={{textDecoration: 'none', color: '#fff'}}>\n          <Button startIcon={<WbSunnyIcon/>} style={{color: '#fff'}}>\n              Forecast\n          </Button>\n        </Link>}\n      </div>\n    </Toolbar>\n  </AppBar>\n}\n","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n            primary: {500: \"#F2B705\"},\n            // secondary: green,\n    }\n});\n\nexport default responsiveFontSizes(theme);","import React from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport './App.css';\nimport ForecastPage from './ForecastPage';\nimport Radar from './Radar';\nimport Header from './Header';\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport theme from './theme';\n\nfunction App() {\n  const LNG = -93.2054;\n  const LAT = 44.9475;\n\n  return (\n    <ThemeProvider theme={theme}>\n      <BrowserRouter>\n        <Header/>\n        <Switch>\n\n          <Route path='/radar'>\n            <Radar lng={LNG} lat={LAT} />\n          </Route>\n\n          <Route path='/'>\n            <ForecastPage />\n          </Route>\n\n        </Switch>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}